{{- if not .Values.krateoplatformops.vcluster.enabled }}
apiVersion: krateo.io/v1alpha1
kind: KrateoPlatformOps
metadata:
  annotations:
    "krateo.io/connector-verbose": "true"
  name: krateo
  namespace: {{ .Release.Namespace }}
spec:
  steps:
    - id: install-authn
      type: chart
      with:
        name: {{ .Values.krateoplatformops.authn.chart.name }}
        version: {{ .Values.krateoplatformops.authn.chart.version }}
        repository: {{ .Values.krateoplatformops.authn.chart.repository }}
        wait: {{ .Values.krateoplatformops.authn.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.authn.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.authn.chart.credentials (gt (len .Values.krateoplatformops.authn.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.authn.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.authn.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.authn.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.authn.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.authn.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.authn.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.authn.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.authn.resources.requests .Values.krateoplatformops.authn.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.authn.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.authn.resources.requests .Values.krateoplatformops.authn.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.authn.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.authn.resources.limits .Values.krateoplatformops.authn.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.authn.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.authn.resources.limits .Values.krateoplatformops.authn.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.authn.resources.limits.memory }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.authn.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.authn.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.authn.image.tag }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.service.type "NodePort" }}
          - name: service.type
            value: NodePort
          - name: service.nodePort
            value: "30082"
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: service.type
            value: LoadBalancer
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- if eq .Values.krateoplatformops.ingress.enabled true }}
          - name: ingress.enabled
            value: "true"
          - name: ingress.className
            value: {{ .Values.krateoplatformops.ingress.authn.className }}
          {{- range $key, $value := .Values.krateoplatformops.ingress.authn.annotations }}
          - name: ingress.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          - name: ingress.hosts[0].host
            value: {{ index .Values.krateoplatformops.ingress.authn.hosts 0 "host" }}
          - name: ingress.hosts[0].paths[0].path
            value: {{ index .Values.krateoplatformops.ingress.authn.hosts 0 "paths" 0 "path" }}
          - name: ingress.hosts[0].paths[0].pathType
            value: {{ index .Values.krateoplatformops.ingress.authn.hosts 0 "paths" 0 "pathType" }}
          {{- if and .Values.krateoplatformops.ingress.authn.tls (gt (len .Values.krateoplatformops.ingress.authn.tls) 0) }}
          - name: ingress.tls[0].secretName
            value: {{ index .Values.krateoplatformops.ingress.authn.tls 0 "secretName" }}
          - name: ingress.tls[0].hosts[0]
            value: {{ index .Values.krateoplatformops.ingress.authn.tls 0 "hosts" 0 }}
          {{- end }}
          {{- end }}
          - name: env.AUTHN_KUBECONFIG_SERVER_URL
            value: {{ .Values.krateoplatformops.authn.KUBECONFIG_SERVER_URL }}

    {{- if and (eq .Values.krateoplatformops.service.type "NodePort") .Values.krateoplatformops.service.externalIpAvailable }}
    # to implement: $(kubectl get nodes --namespace krateo-system -o jsonpath="{.items[0].status.addresses[0].address}")
    - id: extract-authn-nodeport-ip
      type: var
      with:
        name: AUTHN_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .spec.ports[0].nodePort

    - id: extract-authn-nodeport-port
      type: var
      with:
        name: AUTHN_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if and (eq .Values.krateoplatformops.service.type "NodePort") (not .Values.krateoplatformops.service.externalIpAvailable) }}
    - id: extract-authn-nodeport-port
      type: var
      with:
        name: AUTHN_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}

    {{- if .Values.krateoplatformops.service.externalIpAvailable }}
    - id: extract-authn-lb-ip
      type: var
      with:
        name: AUTHN_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip
    {{- else }}
    - id: extract-authn-lb-ip
      type: var
      with:
        name: AUTHN_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .status.loadBalancer.ingress[0].hostname
    {{- end }}

    - id: extract-authn-lb-port
      type: var
      with:
        name: AUTHN_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .spec.ports[0].port

    {{- else if .Values.krateoplatformops.ingress.enabled }}
    - id: extract-authn-ingress-ip
      type: var
      with:
        name: AUTHN_IP
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip

    - id: extract-authn-ingress-host
      type: var
      with:
        name: AUTHN_INGRESS_HOST
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .spec.rules[0].host
    {{- end }}

    - id: install-bff
      type: chart
      with:
        name: {{ .Values.krateoplatformops.bff.chart.name }}
        version: {{ .Values.krateoplatformops.bff.chart.version }}
        repository: {{ .Values.krateoplatformops.bff.chart.repository }}
        wait: {{ .Values.krateoplatformops.bff.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.bff.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.bff.chart.credentials (gt (len .Values.krateoplatformops.bff.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.bff.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.bff.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.bff.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.bff.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.bff.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.bff.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.bff.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.bff.resources.requests .Values.krateoplatformops.bff.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.bff.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.bff.resources.requests .Values.krateoplatformops.bff.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.bff.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.bff.resources.limits .Values.krateoplatformops.bff.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.bff.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.bff.resources.limits .Values.krateoplatformops.bff.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.bff.resources.limits.memory }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.bff.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.bff.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.bff.image.tag }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.service.type "NodePort" }}
          - name: service.type
            value: NodePort
          - name: service.nodePort
            value: "30081"
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: service.type
            value: LoadBalancer
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- if eq .Values.krateoplatformops.ingress.enabled true }}
          - name: ingress.enabled
            value: "true"
          - name: ingress.className
            value: {{ .Values.krateoplatformops.ingress.bff.className }}
          {{- range $key, $value := .Values.krateoplatformops.ingress.bff.annotations }}
          - name: ingress.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          - name: ingress.hosts[0].host
            value: {{ index .Values.krateoplatformops.ingress.bff.hosts 0 "host" }}
          - name: ingress.hosts[0].paths[0].path
            value: {{ index .Values.krateoplatformops.ingress.bff.hosts 0 "paths" 0 "path" }}
          - name: ingress.hosts[0].paths[0].pathType
            value: {{ index .Values.krateoplatformops.ingress.bff.hosts 0 "paths" 0 "pathType" }}
          {{- if and .Values.krateoplatformops.ingress.bff.tls (gt (len .Values.krateoplatformops.ingress.bff.tls) 0) }}
          - name: ingress.tls[0].secretName
            value: {{ index .Values.krateoplatformops.ingress.bff.tls 0 "secretName" }}
          - name: ingress.tls[0].hosts[0]
            value: {{ index .Values.krateoplatformops.ingress.bff.tls 0 "hosts" 0 }}
          {{- end }}
          {{- end }}

    {{- if and (eq .Values.krateoplatformops.service.type "NodePort") .Values.krateoplatformops.service.externalIpAvailable }}
    # to implement: $(kubectl get nodes --namespace krateo-system -o jsonpath="{.items[0].status.addresses[0].address}")
    - id: extract-bff-nodeport-ip
      type: var
      with:
        name: BFF_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .spec.ports[0].nodePort

    - id: extract-bff-nodeport-port
      type: var
      with:
        name: BFF_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if and (eq .Values.krateoplatformops.service.type "NodePort") (not .Values.krateoplatformops.service.externalIpAvailable) }}
    - id: extract-bff-nodeport-port
      type: var
      with:
        name: BFF_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}

    {{- if .Values.krateoplatformops.service.externalIpAvailable }}
    - id: extract-bff-lb-ip
      type: var
      with:
        name: BFF_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip
    {{- else }}
    - id: extract-bff-lb-ip
      type: var
      with:
        name: BFF_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .status.loadBalancer.ingress[0].hostname
    {{- end }}

    - id: extract-bff-lb-port
      type: var
      with:
        name: BFF_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .spec.ports[0].port
    {{- else if .Values.krateoplatformops.ingress.enabled }}
    - id: extract-bff-ingress-ip
      type: var
      with:
        name: BFF_IP
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip

    - id: extract-bff-ingress-host
      type: var
      with:
        name: BFF_INGRESS_HOST
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .spec.rules[0].host
    {{- end }}

    - id: install-backend-etcd
      type: chart
      with:
        name: {{ .Values.krateoplatformops.backend.etcd.chart.name }}
        version: {{ .Values.krateoplatformops.backend.etcd.chart.version }}
        repository: {{ .Values.krateoplatformops.backend.etcd.chart.repository }}
        wait: {{ .Values.krateoplatformops.backend.etcd.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.backend.etcd.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.backend.etcd.chart.credentials (gt (len .Values.krateoplatformops.backend.etcd.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.backend.etcd.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.backend.etcd.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.backend.etcd.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.backend.etcd.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.backend.etcd.auth.rbac.create }}
          - name: auth.rbac.create
            value: "true"
          {{- else }}
          - name: auth.rbac.create
            value: "false"
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.global.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.backend.etcd.global.imagePullSecrets }}
          - name: global.imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.global.compatibility.openshift.adaptSecurityContext }}
          - name: global.compatibility.openshift.adaptSecurityContext
            value: {{ .Values.krateoplatformops.backend.etcd.global.compatibility.openshift.adaptSecurityContext }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.global.imageRegistry }}
          - name: global.imageRegistry
            value: {{ .Values.krateoplatformops.backend.etcd.global.imageRegistry }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.global.defaultStorageClass }}
          - name: global.defaultStorageClass
            value: {{ .Values.krateoplatformops.backend.etcd.global.defaultStorageClass }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.backend.etcd.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.etcd.resources.requests .Values.krateoplatformops.backend.etcd.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.backend.etcd.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.etcd.resources.requests .Values.krateoplatformops.backend.etcd.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.backend.etcd.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.etcd.resources.limits .Values.krateoplatformops.backend.etcd.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.backend.etcd.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.etcd.resources.limits .Values.krateoplatformops.backend.etcd.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.backend.etcd.resources.limits.memory }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.backend.etcd.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.backend.etcd.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.backend.etcd.image.tag }}
          {{- end }}

    - id: install-backend
      type: chart
      with:
        name: {{ .Values.krateoplatformops.backend.chart.name }}
        version: {{ .Values.krateoplatformops.backend.chart.version }}
        repository: {{ .Values.krateoplatformops.backend.chart.repository }}
        wait: {{ .Values.krateoplatformops.backend.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.backend.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.backend.chart.credentials (gt (len .Values.krateoplatformops.backend.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.backend.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.backend.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.backend.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.backend.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.backend.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.backend.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.backend.fullnameOverride }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.fullnameOverride }}
          - name: etcd.service.name
            value: {{ .Values.krateoplatformops.backend.etcd.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.resources.requests .Values.krateoplatformops.backend.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.backend.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.resources.requests .Values.krateoplatformops.backend.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.backend.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.resources.limits .Values.krateoplatformops.backend.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.backend.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.resources.limits .Values.krateoplatformops.backend.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.backend.resources.limits.memory }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.backend.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.backend.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.backend.image.tag }}
          {{- end }}

    - id: install-eventrouter
      type: chart
      with:
        name: {{ .Values.krateoplatformops.eventrouter.chart.name }}
        version: {{ .Values.krateoplatformops.eventrouter.chart.version }}
        repository: {{ .Values.krateoplatformops.eventrouter.chart.repository }}
        wait: {{ .Values.krateoplatformops.eventrouter.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.eventrouter.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.eventrouter.chart.credentials (gt (len .Values.krateoplatformops.eventrouter.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.eventrouter.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.eventrouter.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.eventrouter.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.eventrouter.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.eventrouter.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.eventrouter.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventrouter.resources.requests .Values.krateoplatformops.eventrouter.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.eventrouter.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventrouter.resources.requests .Values.krateoplatformops.eventrouter.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.eventrouter.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventrouter.resources.limits .Values.krateoplatformops.eventrouter.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.eventrouter.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventrouter.resources.limits .Values.krateoplatformops.eventrouter.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.eventrouter.resources.limits.memory }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.eventrouter.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.eventrouter.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.eventrouter.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.eventrouter.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}

    - id: install-eventsse
      type: chart
      with:
        name: {{ .Values.krateoplatformops.eventsse.chart.name }}
        version: {{ .Values.krateoplatformops.eventsse.chart.version }}
        repository: {{ .Values.krateoplatformops.eventsse.chart.repository }}
        wait: {{ .Values.krateoplatformops.eventsse.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.eventsse.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.eventsse.chart.credentials (gt (len .Values.krateoplatformops.eventsse.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.eventsse.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.eventsse.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.eventsse.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.eventsse.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.fullnameOverride }}
          - name: etcd.service.name
            value: {{ .Values.krateoplatformops.backend.etcd.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventsse.resources.requests .Values.krateoplatformops.eventsse.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.eventsse.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventsse.resources.requests .Values.krateoplatformops.eventsse.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.eventsse.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventsse.resources.limits .Values.krateoplatformops.eventsse.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.eventsse.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventsse.resources.limits .Values.krateoplatformops.eventsse.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.eventsse.resources.limits.memory }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.eventsse.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.eventsse.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.eventsse.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.eventsse.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.service.type "NodePort" }}
          - name: service.type
            value: NodePort
          - name: service.nodePort
            value: "30083"
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: service.type
            value: LoadBalancer
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- if eq .Values.krateoplatformops.ingress.enabled true }}
          - name: ingress.enabled
            value: "true"
          - name: ingress.className
            value: {{ .Values.krateoplatformops.ingress.eventsse.className }}
          {{- range $key, $value := .Values.krateoplatformops.ingress.eventsse.annotations }}
          - name: ingress.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          - name: ingress.hosts[0].host
            value: {{ index .Values.krateoplatformops.ingress.eventsse.hosts 0 "host" }}
          - name: ingress.hosts[0].paths[0].path
            value: {{ index .Values.krateoplatformops.ingress.eventsse.hosts 0 "paths" 0 "path" }}
          - name: ingress.hosts[0].paths[0].pathType
            value: {{ index .Values.krateoplatformops.ingress.eventsse.hosts 0 "paths" 0 "pathType" }}
          {{- if and .Values.krateoplatformops.ingress.eventsse.tls (gt (len .Values.krateoplatformops.ingress.eventsse.tls) 0) }}
          - name: ingress.tls[0].secretName
            value: {{ index .Values.krateoplatformops.ingress.eventsse.tls 0 "secretName" }}
          - name: ingress.tls[0].hosts[0]
            value: {{ index .Values.krateoplatformops.ingress.eventsse.tls 0 "hosts" 0 }}
          {{- end }}
          {{- end }}

    {{- if and (eq .Values.krateoplatformops.service.type "NodePort") .Values.krateoplatformops.service.externalIpAvailable }}
    # to implement: $(kubectl get nodes --namespace krateo-system -o jsonpath="{.items[0].status.addresses[0].address}")
    - id: extract-eventsse-nodeport-ip
      type: var
      with:
        name: EVENTSSE_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-external
            {{- else }}
            name: eventsse-external
            {{- end }}
          selector: .spec.ports[0].nodePort

    - id: extract-eventsse-nodeport-port
      type: var
      with:
        name: EVENTSSE_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-external
            {{- else }}
            name: eventsse-external
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if and (eq .Values.krateoplatformops.service.type "NodePort") (not .Values.krateoplatformops.service.externalIpAvailable) }}
    - id: extract-eventsse-nodeport-port
      type: var
      with:
        name: EVENTSSE_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-external
            {{- else }}
            name: eventsse-external
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}

    {{- if .Values.krateoplatformops.service.externalIpAvailable }}
    - id: extract-eventsse-lb-ip
      type: var
      with:
        name: EVENTSSE_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-external
            {{- else }}
            name: eventsse-external
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip
    {{- else }}
    - id: extract-eventsse-lb-ip
      type: var
      with:
        name: EVENTSSE_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-external
            {{- else }}
            name: eventsse-external
            {{- end }}
          selector: .status.loadBalancer.ingress[0].hostname
    {{- end }}

    - id: extract-eventsse-lb-port
      type: var
      with:
        name: EVENTSSE_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-external
            {{- else }}
            name: eventsse-external
            {{- end }}
          selector: .spec.ports[0].port
    {{- else if .Values.krateoplatformops.ingress.enabled }}
    - id: extract-eventsse-ingress-ip
      type: var
      with:
        name: EVENTSSE_IP
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}
            {{- else }}
            name: eventsse
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip

    - id: extract-eventsse-ingress-host
      type: var
      with:
        name: EVENTSSE_INGRESS_HOST
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}
            {{- else }}
            name: eventsse
            {{- end }}
          selector: .spec.rules[0].host
    {{- end }}

    {{- if .Values.krateoplatformops.terminal.enabled }}
    - id: install-terminal-server
      type: chart
      with:
        name: {{ .Values.krateoplatformops.terminal.chart.name }}
        version: {{ .Values.krateoplatformops.terminal.chart.version }}
        repository: {{ .Values.krateoplatformops.terminal.chart.repository }}
        wait: {{ .Values.krateoplatformops.terminal.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.terminal.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.terminal.chart.credentials (gt (len .Values.krateoplatformops.terminal.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.terminal.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.terminal.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.terminal.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.terminal.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.terminal.resources.requests .Values.krateoplatformops.terminal.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.terminal.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.terminal.resources.requests .Values.krateoplatformops.terminal.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.terminal.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.terminal.resources.limits .Values.krateoplatformops.terminal.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.terminal.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.terminal.resources.limits .Values.krateoplatformops.terminal.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.terminal.resources.limits.memory }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.terminal.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.terminal.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.terminal.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.terminal.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.service.type "NodePort" }}
          - name: service.type
            value: NodePort
          - name: service.nodePort
            value: "30084"
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: service.type
            value: LoadBalancer
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- if eq .Values.krateoplatformops.ingress.enabled true }}
          - name: ingress.enabled
            value: "true"
          - name: ingress.className
            value: {{ .Values.krateoplatformops.ingress.terminal.className }}
          {{- range $key, $value := .Values.krateoplatformops.ingress.terminal.annotations }}
          - name: ingress.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          - name: ingress.hosts[0].host
            value: {{ index .Values.krateoplatformops.ingress.terminal.hosts 0 "host" }}
          - name: ingress.hosts[0].paths[0].path
            value: {{ index .Values.krateoplatformops.ingress.terminal.hosts 0 "paths" 0 "path" }}
          - name: ingress.hosts[0].paths[0].pathType
            value: {{ index .Values.krateoplatformops.ingress.terminal.hosts 0 "paths" 0 "pathType" }}
          {{- if and .Values.krateoplatformops.ingress.terminal.tls (gt (len .Values.krateoplatformops.ingress.terminal.tls) 0) }}
          - name: ingress.tls[0].secretName
            value: {{ index .Values.krateoplatformops.ingress.terminal.tls 0 "secretName" }}
          - name: ingress.tls[0].hosts[0]
            value: {{ index .Values.krateoplatformops.ingress.terminal.tls 0 "hosts" 0 }}
          {{- end }}
          {{- end }}

    {{- if and (eq .Values.krateoplatformops.service.type "NodePort") .Values.krateoplatformops.service.externalIpAvailable }}
    # to implement: $(kubectl get nodes --namespace krateo-system -o jsonpath="{.items[0].status.addresses[0].address}")
    - id: extract-terminal-nodeport-ip
      type: var
      with:
        name: TERMINAL_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .spec.ports[0].nodePort

    - id: extract-terminal-nodeport-port
      type: var
      with:
        name: TERMINAL_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if and (eq .Values.krateoplatformops.service.type "NodePort") (not .Values.krateoplatformops.service.externalIpAvailable) }}
    - id: extract-terminal-nodeport-port
      type: var
      with:
        name: TERMINAL_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}

    {{- if .Values.krateoplatformops.service.externalIpAvailable }}
    - id: extract-terminal-lb-ip
      type: var
      with:
        name: TERMINAL_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip
    {{- else }}
    - id: extract-terminal-lb-ip
      type: var
      with:
        name: EVENTSSE_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .status.loadBalancer.ingress[0].hostname
    {{- end }}

    - id: extract-terminal-lb-port
      type: var
      with:
        name: TERMINAL_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .spec.ports[0].port
    {{- else if .Values.krateoplatformops.ingress.enabled }}
    - id: extract-terminal-ingress-ip
      type: var
      with:
        name: TERMINAL_IP
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip

    - id: extract-terminal-ingress-host
      type: var
      with:
        name: TERMINAL_INGRESS_HOST
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .spec.rules[0].host
    {{- end }}


    {{- end }}

    - id: install-frontend
      type: chart
      with:
        name: {{ .Values.krateoplatformops.frontend.chart.name }}
        version: {{ .Values.krateoplatformops.frontend.chart.version }}
        repository: {{ .Values.krateoplatformops.frontend.chart.repository }}
        wait: {{ .Values.krateoplatformops.frontend.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.frontend.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.frontend.chart.credentials (gt (len .Values.krateoplatformops.frontend.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.frontend.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.frontend.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.frontend.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.frontend.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.frontend.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.frontend.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.frontend.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.frontend.resources.requests .Values.krateoplatformops.frontend.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.frontend.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.frontend.resources.requests .Values.krateoplatformops.frontend.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.frontend.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.frontend.resources.limits .Values.krateoplatformops.frontend.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.frontend.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.frontend.resources.limits .Values.krateoplatformops.frontend.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.frontend.resources.limits.memory }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.frontend.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.frontend.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.frontend.image.tag }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.service.type "NodePort" }}
          - name: service.type
            value: NodePort
          - name: service.nodePort
            value: "30080"
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: service.type
            value: LoadBalancer
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- if eq .Values.krateoplatformops.ingress.enabled true }}
          - name: ingress.enabled
            value: "true"
          - name: ingress.className
            value: {{ .Values.krateoplatformops.ingress.frontend.className }}
          {{- range $key, $value := .Values.krateoplatformops.ingress.frontend.annotations }}
          - name: ingress.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          - name: ingress.hosts[0].host
            value: {{ index .Values.krateoplatformops.ingress.frontend.hosts 0 "host" }}
          - name: ingress.hosts[0].paths[0].path
            value: {{ index .Values.krateoplatformops.ingress.frontend.hosts 0 "paths" 0 "path" }}
          - name: ingress.hosts[0].paths[0].pathType
            value: {{ index .Values.krateoplatformops.ingress.frontend.hosts 0 "paths" 0 "pathType" }}
          {{- if and .Values.krateoplatformops.ingress.frontend.tls (gt (len .Values.krateoplatformops.ingress.frontend.tls) 0) }}
          - name: ingress.tls[0].secretName
            value: {{ index .Values.krateoplatformops.ingress.frontend.tls 0 "secretName" }}
          - name: ingress.tls[0].hosts[0]
            value: {{ index .Values.krateoplatformops.ingress.frontend.tls 0 "hosts" 0 }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.overrideconf }}
          - name: env.AUTHN_API_BASE_URL
            value: {{ .Values.krateoplatformops.frontend.env.AUTHN_API_BASE_URL }}
          - name: env.BFF_API_BASE_URL
            value: {{ .Values.krateoplatformops.frontend.env.BFF_API_BASE_URL }}
          - name: env.EVENTS_PUSH_API_BASE_URL
            value: {{ .Values.krateoplatformops.frontend.env.EVENTS_PUSH_API_BASE_URL }}
          - name: env.EVENTS_API_BASE_URL
            value: {{ .Values.krateoplatformops.frontend.env.EVENTS_API_BASE_URL }}
          {{- if .Values.krateoplatformops.terminal.enabled }}
          - name: env.TERMINAL_SOCKET_URL
            value: {{ .Values.krateoplatformops.frontend.env.TERMINAL_SOCKET_URL }}
          {{- end }}
          {{- else if and (eq .Values.krateoplatformops.service.type "NodePort") .Values.krateoplatformops.service.externalIpAvailable }}
          - name: env.AUTHN_API_BASE_URL
            value: http://$AUTHN_IP:$AUTHN_PORT
          - name: env.BFF_API_BASE_URL
            value: http://$BFF_IP:$BFF_PORT
          - name: env.EVENTS_PUSH_API_BASE_URL
            value: http://$EVENTSSE_IP:$EVENTSSE_PORT
          - name: env.EVENTS_API_BASE_URL
            value: http://$EVENTSSE_IP:$EVENTSSE_PORT
          {{- if .Values.krateoplatformops.terminal.enabled }}
          - name: env.TERMINAL_SOCKET_URL
            value: http://$TERMINAL_IP:$TERMINAL_PORT
          {{- end }}
          {{- else if and (eq .Values.krateoplatformops.service.type "NodePort") (not .Values.krateoplatformops.service.externalIpAvailable) }}
          - name: env.AUTHN_API_BASE_URL
            value: http://127.0.0.1:$AUTHN_PORT
          - name: env.BFF_API_BASE_URL
            value: http://127.0.0.1:$BFF_PORT
          - name: env.EVENTS_PUSH_API_BASE_URL
            value: http://127.0.0.1:$EVENTSSE_PORT
          - name: env.EVENTS_API_BASE_URL
            value: http://127.0.0.1:$EVENTSSE_PORT
          {{- if .Values.krateoplatformops.terminal.enabled }}
          - name: env.TERMINAL_SOCKET_URL
            value: http://127.0.0.1:$TERMINAL_PORT
          {{- end }}
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: env.AUTHN_API_BASE_URL
            value: http://$AUTHN_IP:$AUTHN_PORT
          - name: env.BFF_API_BASE_URL
            value: http://$BFF_IP:$BFF_PORT
          - name: env.EVENTS_PUSH_API_BASE_URL
            value: http://$EVENTSSE_IP:$EVENTSSE_PORT
          - name: env.EVENTS_API_BASE_URL
            value: http://$EVENTSSE_IP:$EVENTSSE_PORT
          {{- if .Values.krateoplatformops.terminal.enabled }}
          - name: env.TERMINAL_SOCKET_URL
            value: http://$TERMINAL_IP:$TERMINAL_PORT
          {{- end }}
          {{- else if .Values.krateoplatformops.ingress.enabled }}
          - name: env.AUTHN_API_BASE_URL
            value: https://$AUTHN_INGRESS_HOST
          - name: env.BFF_API_BASE_URL
            value: https://$BFF_INGRESS_HOST
          - name: env.EVENTS_PUSH_API_BASE_URL
            value: https://$EVENTSSE_INGRESS_HOST
          - name: env.EVENTS_API_BASE_URL
            value: https://$EVENTSSE_INGRESS_HOST
          {{- if .Values.krateoplatformops.terminal.enabled }}
          - name: env.TERMINAL_SOCKET_URL
            value: https://$TERMINAL_INGRESS_HOST
          {{- end }}
          {{- end }}

    - id: install-core-provider
      type: chart
      with:
        name: {{ index .Values.krateoplatformops "core-provider" "chart" "name" }}
        version: {{ index .Values.krateoplatformops "core-provider" "chart" "version" }}
        repository: {{ index .Values.krateoplatformops "core-provider" "chart" "repository" }}
        wait: {{ index .Values.krateoplatformops "core-provider" "chart" "wait" }}
        waitTimeout: {{ index .Values.krateoplatformops "core-provider" "chart" "waitTimeout" }}
        {{- if index .Values.krateoplatformops "core-provider" "chart" "credentials" }}
        credentials:
          username: {{ index .Values.krateoplatformops "core-provider" "chart" "credentials" "username" }}
          passwordRef: # reference to a secret
            key: {{ index .Values.krateoplatformops "core-provider" "chart" "credentials" "passwordRef" "key" }}
            name: {{ index .Values.krateoplatformops "core-provider" "chart" "credentials" "passwordRef" "name" }}
            namespace: {{ index .Values.krateoplatformops "core-provider" "chart" "credentials" "passwordRef" "namespace" }}
        {{- end }}
        set:
          {{- if index .Values.krateoplatformops "core-provider" "imagePullSecrets" }}
          {{- range $index, $secret := index .Values.krateoplatformops "core-provider" "imagePullSecrets" }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if index .Values.krateoplatformops "core-provider" "fullnameOverride" }}
          - name: fullnameOverride
            value: {{ index .Values.krateoplatformops "core-provider" "fullnameOverride" }}
          {{- end }}
          {{- if and (index .Values.krateoplatformops "core-provider" "resources" "requests") (index .Values.krateoplatformops "core-provider" "resources" "requests" "cpu") }}
          - name: resources.requests.cpu
            value: {{ index .Values.krateoplatformops "core-provider" "resources" "requests" "cpu" | quote }}
          {{- end }}
          {{- if and (index .Values.krateoplatformops "core-provider" "resources" "requests") (index .Values.krateoplatformops "core-provider" "resources" "requests" "memory") }}
          - name: resources.requests.memory
            value: {{ index .Values.krateoplatformops "core-provider" "resources" "requests" "memory" }}
          {{- end }}
          {{- if and (index .Values.krateoplatformops "core-provider" "resources" "limits") (index .Values.krateoplatformops "core-provider" "resources" "limits" "cpu") }}
          - name: resources.limits.cpu
            value: {{ index .Values.krateoplatformops "core-provider" "resources" "limits" "cpu" | quote }}
          {{- end }}
          {{- if and (index .Values.krateoplatformops "core-provider" "resources" "limits") (index .Values.krateoplatformops "core-provider" "resources" "limits" "memory") }}
          - name: resources.limits.memory
            value: {{ index .Values.krateoplatformops "core-provider" "resources" "limits" "memory" }}
          {{- end }}
          {{- if index .Values.krateoplatformops "core-provider" "image" "repository" }}
          - name: image.repository
            value: {{ index .Values.krateoplatformops "core-provider" "image" "repository" }}
          {{- end }}
          {{- if index .Values.krateoplatformops "core-provider" "image" "pullPolicy" }}
          - name: image.pullPolicy
            value: {{ index .Values.krateoplatformops "core-provider" "image" "pullPolicy" }}
          {{- end }}
          {{- if index .Values.krateoplatformops "core-provider" "image" "tag" }}
          - name: image.tag
            value: {{ index .Values.krateoplatformops "core-provider" "image" "tag" }}
          {{- end }}

    - id: install-patch-provider
      type: chart
      with:
        name: {{ index .Values.krateoplatformops "patch-provider" "chart" "name" }}
        version: {{ index .Values.krateoplatformops "patch-provider" "chart" "version" }}
        repository: {{ index .Values.krateoplatformops "patch-provider" "chart" "repository" }}
        wait: {{ index .Values.krateoplatformops "patch-provider" "chart" "wait" }}
        waitTimeout: {{ index .Values.krateoplatformops "patch-provider" "chart" "waitTimeout" }}
        {{- if index .Values.krateoplatformops "patch-provider" "chart" "credentials" }}
        credentials:
          username: {{ index .Values.krateoplatformops "patch-provider" "chart" "credentials" "username" }}
          passwordRef: # reference to a secret
            key: {{ index .Values.krateoplatformops "patch-provider" "chart" "credentials" "passwordRef" "key" }}
            name: {{ index .Values.krateoplatformops "patch-provider" "chart" "credentials" "passwordRef" "name" }}
            namespace: {{ index .Values.krateoplatformops "patch-provider" "chart" "credentials" "passwordRef" "namespace" }}
        {{- end }}
        set:
          {{- if index .Values.krateoplatformops "patch-provider" "imagePullSecrets" }}
          {{- range $index, $secret := index .Values.krateoplatformops "patch-provider" "imagePullSecrets" }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if index .Values.krateoplatformops "patch-provider" "fullnameOverride" }}
          - name: fullnameOverride
            value: {{ index .Values.krateoplatformops "patch-provider" "fullnameOverride" }}
          {{- end }}
          {{- if and (index .Values.krateoplatformops "patch-provider" "resources" "requests") (index .Values.krateoplatformops "patch-provider" "resources" "requests" "cpu") }}
          - name: resources.requests.cpu
            value: {{ index .Values.krateoplatformops "patch-provider" "resources" "requests" "cpu" | quote }}
          {{- end }}
          {{- if and (index .Values.krateoplatformops "patch-provider" "resources" "requests") (index .Values.krateoplatformops "patch-provider" "resources" "requests" "memory") }}
          - name: resources.requests.memory
            value: {{ index .Values.krateoplatformops "patch-provider" "resources" "requests" "memory" }}
          {{- end }}
          {{- if and (index .Values.krateoplatformops "patch-provider" "resources" "limits") (index .Values.krateoplatformops "patch-provider" "resources" "limits" "cpu") }}
          - name: resources.limits.cpu
            value: {{ index .Values.krateoplatformops "patch-provider" "resources" "limits" "cpu" | quote }}
          {{- end }}
          {{- if and (index .Values.krateoplatformops "patch-provider" "resources" "limits") (index .Values.krateoplatformops "patch-provider" "resources" "limits" "memory") }}
          - name: resources.limits.memory
            value: {{ index .Values.krateoplatformops "patch-provider" "resources" "limits" "memory" }}
          {{- end }}
          {{- if index .Values.krateoplatformops "patch-provider" "image" "repository" }}
          - name: image.repository
            value: {{ index .Values.krateoplatformops "patch-provider" "image" "repository" }}
          {{- end }}
          {{- if index .Values.krateoplatformops "patch-provider" "image" "pullPolicy" }}
          - name: image.pullPolicy
            value: {{ index .Values.krateoplatformops "patch-provider" "image" "pullPolicy" }}
          {{- end }}
          {{- if index .Values.krateoplatformops "patch-provider" "image" "tag" }}
          - name: image.tag
            value: {{ index .Values.krateoplatformops "patch-provider" "image" "tag" }}
          {{- end }}

    {{- if index .Values.krateoplatformops "composable-portal-basic" "enabled" }}
    - id: install-composable-portal-basic
      type: chart
      with:
        name: {{ index .Values.krateoplatformops "composable-portal-basic" "chart" "name" }}
        version: {{ index .Values.krateoplatformops "composable-portal-basic" "chart" "version" }}
        repository: {{ index .Values.krateoplatformops "composable-portal-basic" "chart" "repository" }}
        wait: {{ index .Values.krateoplatformops "composable-portal-basic" "chart" "wait" }}
        waitTimeout: {{ index .Values.krateoplatformops "composable-portal-basic" "chart" "waitTimeout" }}
        {{- if index .Values.krateoplatformops "composable-portal-basic" "chart" "credentials" }}
        credentials:
          username: {{ index .Values.krateoplatformops "composable-portal-basic" "chart" "credentials" "username" }}
          passwordRef: # reference to a secret
            key: {{ index .Values.krateoplatformops "composable-portal-basic" "chart" "credentials" "passwordRef" "key" }}
            name: {{ index .Values.krateoplatformops "composable-portal-basic" "chart" "credentials" "passwordRef" "name" }}
            namespace: {{ index .Values.krateoplatformops "composable-portal-basic" "chart" "credentials" "passwordRef" "namespace" }}
        {{- end }}
    {{- end }}

    - id: install-resource-tree-handler
      type: chart
      with:
        name: {{ .Values.krateoplatformops.resourcetreehandler.chart.name }}
        version: {{ .Values.krateoplatformops.resourcetreehandler.chart.version }}
        repository: {{ .Values.krateoplatformops.resourcetreehandler.chart.repository }}
        wait: {{ .Values.krateoplatformops.resourcetreehandler.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.resourcetreehandler.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.resourcetreehandler.chart.credentials (gt (len .Values.krateoplatformops.resourcetreehandler.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.resourcetreehandler.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.resourcetreehandler.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.resourcetreehandler.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.resourcetreehandler.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.resourcetreehandler.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.resourcetreehandler.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.resourcetreehandler.resources.requests .Values.krateoplatformops.resourcetreehandler.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.resourcetreehandler.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.resourcetreehandler.resources.requests .Values.krateoplatformops.resourcetreehandler.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.resourcetreehandler.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.resourcetreehandler.resources.limits .Values.krateoplatformops.resourcetreehandler.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.resourcetreehandler.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.resourcetreehandler.resources.limits .Values.krateoplatformops.resourcetreehandler.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.resourcetreehandler.resources.limits.memory }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.resourcetreehandler.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.resourcetreehandler.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.resourcetreehandler.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.resourcetreehandler.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.service.type "NodePort" }}
          - name: service.type
            value: NodePort
          - name: service.nodePort
            value: "30085"
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: service.type
            value: LoadBalancer
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- if eq .Values.krateoplatformops.ingress.enabled true }}
          - name: ingress.enabled
            value: "true"
          - name: ingress.className
            value: {{ .Values.krateoplatformops.ingress.resourcetreehandler.className }}
          {{- range $key, $value := .Values.krateoplatformops.ingress.resourcetreehandler.annotations }}
          - name: ingress.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          - name: ingress.hosts[0].host
            value: {{ index .Values.krateoplatformops.ingress.resourcetreehandler.hosts 0 "host" }}
          - name: ingress.hosts[0].paths[0].path
            value: {{ index .Values.krateoplatformops.ingress.resourcetreehandler.hosts 0 "paths" 0 "path" }}
          - name: ingress.hosts[0].paths[0].pathType
            value: {{ index .Values.krateoplatformops.ingress.resourcetreehandler.hosts 0 "paths" 0 "pathType" }}
          {{- if and .Values.krateoplatformops.ingress.resourcetreehandler.tls (gt (len .Values.krateoplatformops.ingress.resourcetreehandler.tls) 0) }}
          - name: ingress.tls[0].secretName
            value: {{ index .Values.krateoplatformops.ingress.resourcetreehandler.tls 0 "secretName" }}
          - name: ingress.tls[0].hosts[0]
            value: {{ index .Values.krateoplatformops.ingress.resourcetreehandler.tls 0 "hosts" 0 }}
          {{- end }}
          {{- end }}

    - id: extract-resource-tree-handler-internal-port
      type: var
      with:
        name: RESOURCE_TREE_HANDLER_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.resourcetreehandler.fullnameOverride }}
            name: {{ .Values.krateoplatformops.resourcetreehandler.fullnameOverride }}
            {{- else }}
            name: resource-tree-handler
            {{- end }}
          selector: .spec.ports[0].port

    - id: install-composition-watcher
      type: chart
      with:
        name: {{ .Values.krateoplatformops.compositionwatcher.chart.name }}
        version: {{ .Values.krateoplatformops.compositionwatcher.chart.version }}
        repository: {{ .Values.krateoplatformops.compositionwatcher.chart.repository }}
        wait: {{ .Values.krateoplatformops.compositionwatcher.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.compositionwatcher.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.compositionwatcher.chart.credentials (gt (len .Values.krateoplatformops.resourcetreehandler.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.compositionwatcher.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.compositionwatcher.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.compositionwatcher.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.compositionwatcher.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.compositionwatcher.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.compositionwatcher.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.compositionwatcher.resources.requests .Values.krateoplatformops.compositionwatcher.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.compositionwatcher.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.compositionwatcher.resources.requests .Values.krateoplatformops.compositionwatcher.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.compositionwatcher.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.compositionwatcher.resources.limits .Values.krateoplatformops.compositionwatcher.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.compositionwatcher.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.compositionwatcher.resources.limits .Values.krateoplatformops.compositionwatcher.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.compositionwatcher.resources.limits.memory }}
          {{- end }}
          {{- if .Values.krateoplatformops.compositionwatcher.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.compositionwatcher.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.compositionwatcher.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.compositionwatcher.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.compositionwatcher.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.compositionwatcher.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.compositionwatcher.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.compositionwatcher.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.compositionwatcher.overrideconf }}
          - name: env.RESOURCE_TREE_HANDLER_URL
            value: {{ .Values.krateoplatformops.compositionwatcher.env.RESOURCE_TREE_HANDLER_URL }}
          {{- else if .Values.krateoplatformops.resourcetreehandler.fullnameOverride }}
          - name: env.RESOURCE_TREE_HANDLER_URL
            value: http://{{ .Values.krateoplatformops.resourcetreehandler.fullnameOverride }}.{{ .Release.Namespace }}.svc.cluster.local:$RESOURCE_TREE_HANDLER_PORT
          {{- else }}
          - name: env.RESOURCE_TREE_HANDLER_URL
            value: http://resource-tree-handler.{{ .Release.Namespace }}.svc.cluster.local:$RESOURCE_TREE_HANDLER_PORT
          {{- end }}

{{- end }}
