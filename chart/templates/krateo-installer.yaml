{{- if not .Values.krateoplatformops.vcluster.enabled }}
apiVersion: krateo.io/v1alpha1
kind: KrateoPlatformOps
metadata:
  annotations:
    "krateo.io/connector-verbose": "true"
  name: krateo
  namespace: {{ .Release.Namespace }}
spec:
  steps:
    - id: install-authn
      type: chart
      with:
        name: {{ .Values.krateoplatformops.authn.chart.name }}
        version: {{ .Values.krateoplatformops.authn.chart.version }}
        repository: {{ .Values.krateoplatformops.authn.chart.repository }}
        wait: {{ .Values.krateoplatformops.authn.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.authn.chart.waitTimeout }}
        {{- if and (hasKey .Values.krateoplatformops.authn.chart "credentials") (gt (len .Values.krateoplatformops.authn.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.authn.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.authn.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.authn.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.authn.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.authn.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.authn.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.authn.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.authn.resources.requests .Values.krateoplatformops.authn.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.authn.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.authn.resources.requests .Values.krateoplatformops.authn.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.authn.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.authn.resources.limits .Values.krateoplatformops.authn.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.authn.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.authn.resources.limits .Values.krateoplatformops.authn.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.authn.resources.limits.memory }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.authn.podSecurityContext.appArmorProfile "localhostProfile") }}
          - name: podSecurityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.authn.podSecurityContext.appArmorProfile "type") }}
          - name: podSecurityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.appArmorProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.podSecurityContext.fsGroup }}
          - name: podSecurityContext.fsGroup
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.fsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.podSecurityContext.fsGroupChangePolicy }}
          - name: podSecurityContext.fsGroupChangePolicy
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.fsGroupChangePolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.podSecurityContext.runAsGroup }}
          - name: podSecurityContext.runAsGroup
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.podSecurityContext.runAsNonRoot }}
          - name: podSecurityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.podSecurityContext.runAsUser }}
          - name: podSecurityContext.runAsUser
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.authn.podSecurityContext.seLinuxOptions "level") }}
          - name: podSecurityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.seLinuxOptions.level | replace "," "\\,"  }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.authn.podSecurityContext.seLinuxOptions "role") }}
          - name: podSecurityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.authn.podSecurityContext.seLinuxOptions "type") }}
          - name: podSecurityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.authn.podSecurityContext.seLinuxOptions "user") }}
          - name: podSecurityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.authn.podSecurityContext.seccompProfile "localhostProfile") }}
          - name: podSecurityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.authn.podSecurityContext.seccompProfile "type") }}
          - name: podSecurityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.seccompProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.podSecurityContext.supplementalGroups }}
          {{- range $index, $value := .Values.krateoplatformops.authn.podSecurityContext.supplementalGroups }}
          - name: podSecurityContext.supplementalGroups[{{ $index }}]
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.podSecurityContext.supplementalGroupsPolicy }}
          - name: podSecurityContext.supplementalGroupsPolicy
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.supplementalGroupsPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.podSecurityContext.sysctls }}
          {{- range $index, $sysctl := .Values.krateoplatformops.authn.podSecurityContext.sysctls }}
          - name: podSecurityContext.sysctls[{{ $index }}].{{ $sysctl.name }}
            value: {{ $sysctl.value | quote }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.podSecurityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.authn.podSecurityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: podSecurityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.podSecurityContext "hostProcess") (hasKey .Values.krateoplatformops.authn.podSecurityContext.windowsOptions "hostProcess") }}
          - name: podSecurityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.podSecurityContext "windowsOptions") (hasKey .Values.krateoplatformops.authn.podSecurityContext.windowsOptions "runAsUserName") }}
          - name: podSecurityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.authn.podSecurityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.securityContext.allowPrivilegeEscalation }}
          - name: securityContext.allowPrivilegeEscalation
            value: {{ .Values.krateoplatformops.authn.securityContext.allowPrivilegeEscalation | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.authn.securityContext.appArmorProfile "localhostProfile") }}
          - name: securityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.authn.securityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.authn.securityContext.appArmorProfile "type") }}
          - name: securityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.authn.securityContext.appArmorProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "capabilities") (hasKey .Values.krateoplatformops.authn.securityContext.capabilities "add") }}
          {{- range $index, $value := .Values.krateoplatformops.authn.securityContext.capabilities.add }}
          - name: securityContext.capabilities.add[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "capabilities") (hasKey .Values.krateoplatformops.authn.securityContext.capabilities "drop") }}
          {{- range $index, $value := .Values.krateoplatformops.authn.securityContext.capabilities.drop }}
          - name: securityContext.capabilities.drop[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.securityContext.privileged }}
          - name: securityContext.privileged
            value: {{ .Values.krateoplatformops.authn.securityContext.privileged }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.securityContext.procMount }}
          - name: securityContext.procMount
            value: {{ .Values.krateoplatformops.authn.securityContext.procMount }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.securityContext.readOnlyRootFilesystem }}
          - name: securityContext.readOnlyRootFilesystem
            value: {{ .Values.krateoplatformops.authn.securityContext.readOnlyRootFilesystem | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.securityContext.runAsGroup }}
          - name: securityContext.runAsGroup
            value: {{ .Values.krateoplatformops.authn.securityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.securityContext.runAsNonRoot }}
          - name: securityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.authn.securityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.securityContext.runAsUser }}
          - name: securityContext.runAsUser
            value: {{ .Values.krateoplatformops.authn.securityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.authn.securityContext.seLinuxOptions "level") }}
          - name: securityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.authn.securityContext.seLinuxOptions.level | replace "," "\\," }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.authn.securityContext.seLinuxOptions "role") }}
          - name: securityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.authn.securityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.authn.securityContext.seLinuxOptions "type") }}
          - name: securityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.authn.securityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.authn.securityContext.seLinuxOptions "user") }}
          - name: securityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.authn.securityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.authn.securityContext.seccompProfile "localhostProfile") }}
          - name: securityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.authn.securityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.authn.securityContext.seccompProfile "type") }}
          - name: securityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.authn.securityContext.seccompProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.authn.securityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: securityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.authn.securityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "hostProcess") (hasKey .Values.krateoplatformops.authn.securityContext.windowsOptions "hostProcess") }}
          - name: securityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.authn.securityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.authn.securityContext "windowsOptions") (hasKey .Values.krateoplatformops.authn.securityContext.windowsOptions "runAsUserName") }}
          - name: securityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.authn.securityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.authn.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.authn.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.authn.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.authn.image.tag }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.service.type "NodePort" }}
          - name: service.type
            value: NodePort
          - name: service.nodePort
            value: "30082"
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: service.type
            value: LoadBalancer
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.authn.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- if eq .Values.krateoplatformops.ingress.enabled true }}
          - name: ingress.enabled
            value: "true"
          - name: ingress.className
            value: {{ .Values.krateoplatformops.ingress.authn.className }}
          {{- range $key, $value := .Values.krateoplatformops.ingress.authn.annotations }}
          - name: ingress.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          - name: ingress.hosts[0].host
            value: {{ index .Values.krateoplatformops.ingress.authn.hosts 0 "host" }}
          - name: ingress.hosts[0].paths[0].path
            value: {{ index .Values.krateoplatformops.ingress.authn.hosts 0 "paths" 0 "path" }}
          - name: ingress.hosts[0].paths[0].pathType
            value: {{ index .Values.krateoplatformops.ingress.authn.hosts 0 "paths" 0 "pathType" }}
          {{- if and .Values.krateoplatformops.ingress.authn.tls (gt (len .Values.krateoplatformops.ingress.authn.tls) 0) }}
          - name: ingress.tls[0].secretName
            value: {{ index .Values.krateoplatformops.ingress.authn.tls 0 "secretName" }}
          - name: ingress.tls[0].hosts[0]
            value: {{ index .Values.krateoplatformops.ingress.authn.tls 0 "hosts" 0 }}
          {{- end }}
          {{- end }}
          - name: env.AUTHN_KUBECONFIG_SERVER_URL
            value: {{ .Values.krateoplatformops.authn.KUBECONFIG_SERVER_URL }}
          - name: {{ .Values.krateoplatformops.authn.env }}
          {{- if .Values.krateoplatformops.authn.env }}
          {{- range $key, $value := .Values.krateoplatformops.authn.env }}
          - name: env.{{ $key }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- end }}

    {{- if and (eq .Values.krateoplatformops.service.type "NodePort") .Values.krateoplatformops.service.externalIpAvailable }}
    # to implement: $(kubectl get nodes --namespace krateo-system -o jsonpath="{.items[0].status.addresses[0].address}")
    - id: extract-authn-nodeport-ip
      type: var
      with:
        name: AUTHN_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .spec.ports[0].nodePort

    - id: extract-authn-nodeport-port
      type: var
      with:
        name: AUTHN_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if and (eq .Values.krateoplatformops.service.type "NodePort") (not .Values.krateoplatformops.service.externalIpAvailable) }}
    - id: extract-authn-nodeport-port
      type: var
      with:
        name: AUTHN_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}

    {{- if .Values.krateoplatformops.service.externalIpAvailable }}
    - id: extract-authn-lb-ip
      type: var
      with:
        name: AUTHN_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip
    {{- else }}
    - id: extract-authn-lb-ip
      type: var
      with:
        name: AUTHN_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .status.loadBalancer.ingress[0].hostname
    {{- end }}

    - id: extract-authn-lb-port
      type: var
      with:
        name: AUTHN_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .spec.ports[0].port

    {{- else if .Values.krateoplatformops.ingress.enabled }}
    - id: extract-authn-ingress-ip
      type: var
      with:
        name: AUTHN_IP
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip

    - id: extract-authn-ingress-host
      type: var
      with:
        name: AUTHN_INGRESS_HOST
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.authn.fullnameOverride }}
            name: {{ .Values.krateoplatformops.authn.fullnameOverride }}
            {{- else }}
            name: authn
            {{- end }}
          selector: .spec.rules[0].host
    {{- end }}

    - id: install-bff
      type: chart
      with:
        name: {{ .Values.krateoplatformops.bff.chart.name }}
        version: {{ .Values.krateoplatformops.bff.chart.version }}
        repository: {{ .Values.krateoplatformops.bff.chart.repository }}
        wait: {{ .Values.krateoplatformops.bff.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.bff.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.bff.chart.credentials (gt (len .Values.krateoplatformops.bff.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.bff.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.bff.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.bff.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.bff.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.bff.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.bff.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.bff.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.bff.resources.requests .Values.krateoplatformops.bff.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.bff.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.bff.resources.requests .Values.krateoplatformops.bff.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.bff.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.bff.resources.limits .Values.krateoplatformops.bff.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.bff.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.bff.resources.limits .Values.krateoplatformops.bff.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.bff.resources.limits.memory }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.bff.podSecurityContext.appArmorProfile "localhostProfile") }}
          - name: podSecurityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.bff.podSecurityContext.appArmorProfile "type") }}
          - name: podSecurityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.appArmorProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.podSecurityContext.fsGroup }}
          - name: podSecurityContext.fsGroup
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.fsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.podSecurityContext.fsGroupChangePolicy }}
          - name: podSecurityContext.fsGroupChangePolicy
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.fsGroupChangePolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.podSecurityContext.runAsGroup }}
          - name: podSecurityContext.runAsGroup
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.podSecurityContext.runAsNonRoot }}
          - name: podSecurityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.podSecurityContext.runAsUser }}
          - name: podSecurityContext.runAsUser
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.bff.podSecurityContext.seLinuxOptions "level") }}
          - name: podSecurityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.seLinuxOptions.level | replace "," "\\,"  }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.bff.podSecurityContext.seLinuxOptions "role") }}
          - name: podSecurityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.bff.podSecurityContext.seLinuxOptions "type") }}
          - name: podSecurityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.bff.podSecurityContext.seLinuxOptions "user") }}
          - name: podSecurityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.bff.podSecurityContext.seccompProfile "localhostProfile") }}
          - name: podSecurityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.bff.podSecurityContext.seccompProfile "type") }}
          - name: podSecurityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.seccompProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.podSecurityContext.supplementalGroups }}
          {{- range $index, $value := .Values.krateoplatformops.bff.podSecurityContext.supplementalGroups }}
          - name: podSecurityContext.supplementalGroups[{{ $index }}]
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.podSecurityContext.supplementalGroupsPolicy }}
          - name: podSecurityContext.supplementalGroupsPolicy
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.supplementalGroupsPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.podSecurityContext.sysctls }}
          {{- range $index, $sysctl := .Values.krateoplatformops.bff.podSecurityContext.sysctls }}
          - name: podSecurityContext.sysctls[{{ $index }}].{{ $sysctl.name }}
            value: {{ $sysctl.value | quote }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.podSecurityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.bff.podSecurityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: podSecurityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.podSecurityContext "hostProcess") (hasKey .Values.krateoplatformops.bff.podSecurityContext.windowsOptions "hostProcess") }}
          - name: podSecurityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.podSecurityContext "windowsOptions") (hasKey .Values.krateoplatformops.bff.podSecurityContext.windowsOptions "runAsUserName") }}
          - name: podSecurityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.bff.podSecurityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.securityContext.allowPrivilegeEscalation }}
          - name: securityContext.allowPrivilegeEscalation
            value: {{ .Values.krateoplatformops.bff.securityContext.allowPrivilegeEscalation | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.bff.securityContext.appArmorProfile "localhostProfile") }}
          - name: securityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.bff.securityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.bff.securityContext.appArmorProfile "type") }}
          - name: securityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.bff.securityContext.appArmorProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "capabilities") (hasKey .Values.krateoplatformops.bff.securityContext.capabilities "add") }}
          {{- range $index, $value := .Values.krateoplatformops.bff.securityContext.capabilities.add }}
          - name: securityContext.capabilities.add[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "capabilities") (hasKey .Values.krateoplatformops.bff.securityContext.capabilities "drop") }}
          {{- range $index, $value := .Values.krateoplatformops.bff.securityContext.capabilities.drop }}
          - name: securityContext.capabilities.drop[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.securityContext.privileged }}
          - name: securityContext.privileged
            value: {{ .Values.krateoplatformops.bff.securityContext.privileged }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.securityContext.procMount }}
          - name: securityContext.procMount
            value: {{ .Values.krateoplatformops.bff.securityContext.procMount }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.securityContext.readOnlyRootFilesystem }}
          - name: securityContext.readOnlyRootFilesystem
            value: {{ .Values.krateoplatformops.bff.securityContext.readOnlyRootFilesystem | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.securityContext.runAsGroup }}
          - name: securityContext.runAsGroup
            value: {{ .Values.krateoplatformops.bff.securityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.securityContext.runAsNonRoot }}
          - name: securityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.bff.securityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.securityContext.runAsUser }}
          - name: securityContext.runAsUser
            value: {{ .Values.krateoplatformops.bff.securityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.bff.securityContext.seLinuxOptions "level") }}
          - name: securityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.bff.securityContext.seLinuxOptions.level | replace "," "\\," }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.bff.securityContext.seLinuxOptions "role") }}
          - name: securityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.bff.securityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.bff.securityContext.seLinuxOptions "type") }}
          - name: securityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.bff.securityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.bff.securityContext.seLinuxOptions "user") }}
          - name: securityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.bff.securityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.bff.securityContext.seccompProfile "localhostProfile") }}
          - name: securityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.bff.securityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.bff.securityContext.seccompProfile "type") }}
          - name: securityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.bff.securityContext.seccompProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.bff.securityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: securityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.bff.securityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "hostProcess") (hasKey .Values.krateoplatformops.bff.securityContext.windowsOptions "hostProcess") }}
          - name: securityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.bff.securityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.bff.securityContext "windowsOptions") (hasKey .Values.krateoplatformops.bff.securityContext.windowsOptions "runAsUserName") }}
          - name: securityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.bff.securityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.bff.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.bff.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.bff.image.tag }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.service.type "NodePort" }}
          - name: service.type
            value: NodePort
          - name: service.nodePort
            value: "30081"
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: service.type
            value: LoadBalancer
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.bff.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- if eq .Values.krateoplatformops.ingress.enabled true }}
          - name: ingress.enabled
            value: "true"
          - name: ingress.className
            value: {{ .Values.krateoplatformops.ingress.bff.className }}
          {{- range $key, $value := .Values.krateoplatformops.ingress.bff.annotations }}
          - name: ingress.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          - name: ingress.hosts[0].host
            value: {{ index .Values.krateoplatformops.ingress.bff.hosts 0 "host" }}
          - name: ingress.hosts[0].paths[0].path
            value: {{ index .Values.krateoplatformops.ingress.bff.hosts 0 "paths" 0 "path" }}
          - name: ingress.hosts[0].paths[0].pathType
            value: {{ index .Values.krateoplatformops.ingress.bff.hosts 0 "paths" 0 "pathType" }}
          {{- if and .Values.krateoplatformops.ingress.bff.tls (gt (len .Values.krateoplatformops.ingress.bff.tls) 0) }}
          - name: ingress.tls[0].secretName
            value: {{ index .Values.krateoplatformops.ingress.bff.tls 0 "secretName" }}
          - name: ingress.tls[0].hosts[0]
            value: {{ index .Values.krateoplatformops.ingress.bff.tls 0 "hosts" 0 }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.env }}
          {{- range $key, $value := .Values.krateoplatformops.bff.env }}
          - name: env.{{ $key }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- end }}

    {{- if and (eq .Values.krateoplatformops.service.type "NodePort") .Values.krateoplatformops.service.externalIpAvailable }}
    # to implement: $(kubectl get nodes --namespace krateo-system -o jsonpath="{.items[0].status.addresses[0].address}")
    - id: extract-bff-nodeport-ip
      type: var
      with:
        name: BFF_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .spec.ports[0].nodePort

    - id: extract-bff-nodeport-port
      type: var
      with:
        name: BFF_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if and (eq .Values.krateoplatformops.service.type "NodePort") (not .Values.krateoplatformops.service.externalIpAvailable) }}
    - id: extract-bff-nodeport-port
      type: var
      with:
        name: BFF_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}

    {{- if .Values.krateoplatformops.service.externalIpAvailable }}
    - id: extract-bff-lb-ip
      type: var
      with:
        name: BFF_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip
    {{- else }}
    - id: extract-bff-lb-ip
      type: var
      with:
        name: BFF_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .status.loadBalancer.ingress[0].hostname
    {{- end }}

    - id: extract-bff-lb-port
      type: var
      with:
        name: BFF_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .spec.ports[0].port
    {{- else if .Values.krateoplatformops.ingress.enabled }}
    - id: extract-bff-ingress-ip
      type: var
      with:
        name: BFF_IP
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip

    - id: extract-bff-ingress-host
      type: var
      with:
        name: BFF_INGRESS_HOST
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .spec.rules[0].host
    {{- end }}

    - id: install-backend-etcd
      type: chart
      with:
        name: {{ .Values.krateoplatformops.backend.etcd.chart.name }}
        version: {{ .Values.krateoplatformops.backend.etcd.chart.version }}
        repository: {{ .Values.krateoplatformops.backend.etcd.chart.repository }}
        wait: {{ .Values.krateoplatformops.backend.etcd.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.backend.etcd.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.backend.etcd.chart.credentials (gt (len .Values.krateoplatformops.backend.etcd.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.backend.etcd.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.backend.etcd.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.backend.etcd.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.backend.etcd.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.backend.etcd.auth.rbac.create }}
          - name: auth.rbac.create
            value: "true"
          {{- else }}
          - name: auth.rbac.create
            value: "false"
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.global.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.backend.etcd.global.imagePullSecrets }}
          - name: global.imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.global.compatibility.openshift.adaptSecurityContext }}
          - name: global.compatibility.openshift.adaptSecurityContext
            value: {{ .Values.krateoplatformops.backend.etcd.global.compatibility.openshift.adaptSecurityContext }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.global.imageRegistry }}
          - name: global.imageRegistry
            value: {{ .Values.krateoplatformops.backend.etcd.global.imageRegistry }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.global.defaultStorageClass }}
          - name: global.defaultStorageClass
            value: {{ .Values.krateoplatformops.backend.etcd.global.defaultStorageClass }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.backend.etcd.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.etcd.resources.requests .Values.krateoplatformops.backend.etcd.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.backend.etcd.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.etcd.resources.requests .Values.krateoplatformops.backend.etcd.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.backend.etcd.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.etcd.resources.limits .Values.krateoplatformops.backend.etcd.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.backend.etcd.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.etcd.resources.limits .Values.krateoplatformops.backend.etcd.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.backend.etcd.resources.limits.memory }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext.appArmorProfile "localhostProfile") }}
          - name: podSecurityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext.appArmorProfile "type") }}
          - name: podSecurityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.appArmorProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.podSecurityContext.fsGroup }}
          - name: podSecurityContext.fsGroup
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.fsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.podSecurityContext.fsGroupChangePolicy }}
          - name: podSecurityContext.fsGroupChangePolicy
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.fsGroupChangePolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.podSecurityContext.runAsGroup }}
          - name: podSecurityContext.runAsGroup
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.podSecurityContext.runAsNonRoot }}
          - name: podSecurityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.podSecurityContext.runAsUser }}
          - name: podSecurityContext.runAsUser
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext.seLinuxOptions "level") }}
          - name: podSecurityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.seLinuxOptions.level | replace "," "\\,"  }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext.seLinuxOptions "role") }}
          - name: podSecurityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext.seLinuxOptions "type") }}
          - name: podSecurityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext.seLinuxOptions "user") }}
          - name: podSecurityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext.seccompProfile "localhostProfile") }}
          - name: podSecurityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext.seccompProfile "type") }}
          - name: podSecurityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.seccompProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.podSecurityContext.supplementalGroups }}
          {{- range $index, $value := .Values.krateoplatformops.backend.etcd.podSecurityContext.supplementalGroups }}
          - name: podSecurityContext.supplementalGroups[{{ $index }}]
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.podSecurityContext.supplementalGroupsPolicy }}
          - name: podSecurityContext.supplementalGroupsPolicy
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.supplementalGroupsPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.podSecurityContext.sysctls }}
          {{- range $index, $sysctl := .Values.krateoplatformops.backend.etcd.podSecurityContext.sysctls }}
          - name: podSecurityContext.sysctls[{{ $index }}].{{ $sysctl.name }}
            value: {{ $sysctl.value | quote }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: podSecurityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext "hostProcess") (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext.windowsOptions "hostProcess") }}
          - name: podSecurityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext "windowsOptions") (hasKey .Values.krateoplatformops.backend.etcd.podSecurityContext.windowsOptions "runAsUserName") }}
          - name: podSecurityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.backend.etcd.podSecurityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.containerSecurityContext.allowPrivilegeEscalation }}
          - name: containerSecurityContext.allowPrivilegeEscalation
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.allowPrivilegeEscalation | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.appArmorProfile "localhostProfile") }}
          - name: containerSecurityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.appArmorProfile "type") }}
          - name: containerSecurityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.appArmorProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "capabilities") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.capabilities "add") }}
          {{- range $index, $value := .Values.krateoplatformops.backend.etcd.containerSecurityContext.capabilities.add }}
          - name: containerSecurityContext.capabilities.add[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "capabilities") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.capabilities "drop") }}
          {{- range $index, $value := .Values.krateoplatformops.backend.etcd.containerSecurityContext.capabilities.drop }}
          - name: containerSecurityContext.capabilities.drop[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.containerSecurityContext.privileged }}
          - name: containerSecurityContext.privileged
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.privileged }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.containerSecurityContext.procMount }}
          - name: containerSecurityContext.procMount
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.procMount }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.containerSecurityContext.readOnlyRootFilesystem }}
          - name: containerSecurityContext.readOnlyRootFilesystem
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.readOnlyRootFilesystem | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.containerSecurityContext.runAsGroup }}
          - name: containerSecurityContext.runAsGroup
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.containerSecurityContext.runAsNonRoot }}
          - name: containerSecurityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.containerSecurityContext.runAsUser }}
          - name: containerSecurityContext.runAsUser
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.seLinuxOptions "level") }}
          - name: containerSecurityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.seLinuxOptions.level | replace "," "\\," }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.seLinuxOptions "role") }}
          - name: containerSecurityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.seLinuxOptions "type") }}
          - name: containerSecurityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.seLinuxOptions "user") }}
          - name: containerSecurityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.seccompProfile "localhostProfile") }}
          - name: containerSecurityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.seccompProfile "type") }}
          - name: containerSecurityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.seccompProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: containerSecurityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "hostProcess") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.windowsOptions "hostProcess") }}
          - name: containerSecurityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext "windowsOptions") (hasKey .Values.krateoplatformops.backend.etcd.containerSecurityContext.windowsOptions "runAsUserName") }}
          - name: containerSecurityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.backend.etcd.containerSecurityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.backend.etcd.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.backend.etcd.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.backend.etcd.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.env }}
          {{- range $index, $key := keys .Values.krateoplatformops.backend.etcd.env }}
          - name: extraEnvVars[{{ $index }}].name
            value: {{ $key | quote }}
          - name: extraEnvVars[{{ $index }}].value
            value: {{ index $.Values.krateoplatformops.backend.etcd.env $key | quote }}
          {{- end }}
          {{- end }}

    - id: install-backend
      type: chart
      with:
        name: {{ .Values.krateoplatformops.backend.chart.name }}
        version: {{ .Values.krateoplatformops.backend.chart.version }}
        repository: {{ .Values.krateoplatformops.backend.chart.repository }}
        wait: {{ .Values.krateoplatformops.backend.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.backend.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.backend.chart.credentials (gt (len .Values.krateoplatformops.backend.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.backend.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.backend.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.backend.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.backend.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.backend.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.backend.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.backend.fullnameOverride }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.fullnameOverride }}
          - name: etcd.service.name
            value: {{ .Values.krateoplatformops.backend.etcd.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.resources.requests .Values.krateoplatformops.backend.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.backend.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.resources.requests .Values.krateoplatformops.backend.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.backend.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.resources.limits .Values.krateoplatformops.backend.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.backend.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.backend.resources.limits .Values.krateoplatformops.backend.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.backend.resources.limits.memory }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.backend.podSecurityContext.appArmorProfile "localhostProfile") }}
          - name: podSecurityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.backend.podSecurityContext.appArmorProfile "type") }}
          - name: podSecurityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.appArmorProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.podSecurityContext.fsGroup }}
          - name: podSecurityContext.fsGroup
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.fsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.podSecurityContext.fsGroupChangePolicy }}
          - name: podSecurityContext.fsGroupChangePolicy
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.fsGroupChangePolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.podSecurityContext.runAsGroup }}
          - name: podSecurityContext.runAsGroup
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.podSecurityContext.runAsNonRoot }}
          - name: podSecurityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.podSecurityContext.runAsUser }}
          - name: podSecurityContext.runAsUser
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.podSecurityContext.seLinuxOptions "level") }}
          - name: podSecurityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.seLinuxOptions.level | replace "," "\\,"  }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.podSecurityContext.seLinuxOptions "role") }}
          - name: podSecurityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.podSecurityContext.seLinuxOptions "type") }}
          - name: podSecurityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.podSecurityContext.seLinuxOptions "user") }}
          - name: podSecurityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.backend.podSecurityContext.seccompProfile "localhostProfile") }}
          - name: podSecurityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.backend.podSecurityContext.seccompProfile "type") }}
          - name: podSecurityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.seccompProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.podSecurityContext.supplementalGroups }}
          {{- range $index, $value := .Values.krateoplatformops.backend.podSecurityContext.supplementalGroups }}
          - name: podSecurityContext.supplementalGroups[{{ $index }}]
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.podSecurityContext.supplementalGroupsPolicy }}
          - name: podSecurityContext.supplementalGroupsPolicy
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.supplementalGroupsPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.podSecurityContext.sysctls }}
          {{- range $index, $sysctl := .Values.krateoplatformops.backend.podSecurityContext.sysctls }}
          - name: podSecurityContext.sysctls[{{ $index }}].{{ $sysctl.name }}
            value: {{ $sysctl.value | quote }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.podSecurityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.backend.podSecurityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: podSecurityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.podSecurityContext "hostProcess") (hasKey .Values.krateoplatformops.backend.podSecurityContext.windowsOptions "hostProcess") }}
          - name: podSecurityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.podSecurityContext "windowsOptions") (hasKey .Values.krateoplatformops.backend.podSecurityContext.windowsOptions "runAsUserName") }}
          - name: podSecurityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.backend.podSecurityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.securityContext.allowPrivilegeEscalation }}
          - name: securityContext.allowPrivilegeEscalation
            value: {{ .Values.krateoplatformops.backend.securityContext.allowPrivilegeEscalation | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.backend.securityContext.appArmorProfile "localhostProfile") }}
          - name: securityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.backend.securityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.backend.securityContext.appArmorProfile "type") }}
          - name: securityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.backend.securityContext.appArmorProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "capabilities") (hasKey .Values.krateoplatformops.backend.securityContext.capabilities "add") }}
          {{- range $index, $value := .Values.krateoplatformops.backend.securityContext.capabilities.add }}
          - name: securityContext.capabilities.add[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "capabilities") (hasKey .Values.krateoplatformops.backend.securityContext.capabilities "drop") }}
          {{- range $index, $value := .Values.krateoplatformops.backend.securityContext.capabilities.drop }}
          - name: securityContext.capabilities.drop[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.securityContext.privileged }}
          - name: securityContext.privileged
            value: {{ .Values.krateoplatformops.backend.securityContext.privileged }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.securityContext.procMount }}
          - name: securityContext.procMount
            value: {{ .Values.krateoplatformops.backend.securityContext.procMount }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.securityContext.readOnlyRootFilesystem }}
          - name: securityContext.readOnlyRootFilesystem
            value: {{ .Values.krateoplatformops.backend.securityContext.readOnlyRootFilesystem | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.securityContext.runAsGroup }}
          - name: securityContext.runAsGroup
            value: {{ .Values.krateoplatformops.backend.securityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.securityContext.runAsNonRoot }}
          - name: securityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.backend.securityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.securityContext.runAsUser }}
          - name: securityContext.runAsUser
            value: {{ .Values.krateoplatformops.backend.securityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.securityContext.seLinuxOptions "level") }}
          - name: securityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.backend.securityContext.seLinuxOptions.level | replace "," "\\," }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.securityContext.seLinuxOptions "role") }}
          - name: securityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.backend.securityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.securityContext.seLinuxOptions "type") }}
          - name: securityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.backend.securityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.backend.securityContext.seLinuxOptions "user") }}
          - name: securityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.backend.securityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.backend.securityContext.seccompProfile "localhostProfile") }}
          - name: securityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.backend.securityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.backend.securityContext.seccompProfile "type") }}
          - name: securityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.backend.securityContext.seccompProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.backend.securityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: securityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.backend.securityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "hostProcess") (hasKey .Values.krateoplatformops.backend.securityContext.windowsOptions "hostProcess") }}
          - name: securityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.backend.securityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.backend.securityContext "windowsOptions") (hasKey .Values.krateoplatformops.backend.securityContext.windowsOptions "runAsUserName") }}
          - name: securityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.backend.securityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.backend.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.backend.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.backend.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.env }}
          {{- range $key, $value := .Values.krateoplatformops.backend.env }}
          - name: env.{{ $key }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- end }}

    - id: install-eventrouter
      type: chart
      with:
        name: {{ .Values.krateoplatformops.eventrouter.chart.name }}
        version: {{ .Values.krateoplatformops.eventrouter.chart.version }}
        repository: {{ .Values.krateoplatformops.eventrouter.chart.repository }}
        wait: {{ .Values.krateoplatformops.eventrouter.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.eventrouter.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.eventrouter.chart.credentials (gt (len .Values.krateoplatformops.eventrouter.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.eventrouter.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.eventrouter.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.eventrouter.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.eventrouter.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.eventrouter.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.eventrouter.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventrouter.resources.requests .Values.krateoplatformops.eventrouter.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.eventrouter.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventrouter.resources.requests .Values.krateoplatformops.eventrouter.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.eventrouter.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventrouter.resources.limits .Values.krateoplatformops.eventrouter.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.eventrouter.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventrouter.resources.limits .Values.krateoplatformops.eventrouter.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.eventrouter.resources.limits.memory }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext.appArmorProfile "localhostProfile") }}
          - name: podSecurityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext.appArmorProfile "type") }}
          - name: podSecurityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.appArmorProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.podSecurityContext.fsGroup }}
          - name: podSecurityContext.fsGroup
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.fsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.podSecurityContext.fsGroupChangePolicy }}
          - name: podSecurityContext.fsGroupChangePolicy
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.fsGroupChangePolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.podSecurityContext.runAsGroup }}
          - name: podSecurityContext.runAsGroup
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.podSecurityContext.runAsNonRoot }}
          - name: podSecurityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.podSecurityContext.runAsUser }}
          - name: podSecurityContext.runAsUser
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext.seLinuxOptions "level") }}
          - name: podSecurityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.seLinuxOptions.level | replace "," "\\,"  }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext.seLinuxOptions "role") }}
          - name: podSecurityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext.seLinuxOptions "type") }}
          - name: podSecurityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext.seLinuxOptions "user") }}
          - name: podSecurityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext.seccompProfile "localhostProfile") }}
          - name: podSecurityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext.seccompProfile "type") }}
          - name: podSecurityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.seccompProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.podSecurityContext.supplementalGroups }}
          {{- range $index, $value := .Values.krateoplatformops.eventrouter.podSecurityContext.supplementalGroups }}
          - name: podSecurityContext.supplementalGroups[{{ $index }}]
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.podSecurityContext.supplementalGroupsPolicy }}
          - name: podSecurityContext.supplementalGroupsPolicy
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.supplementalGroupsPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.podSecurityContext.sysctls }}
          {{- range $index, $sysctl := .Values.krateoplatformops.eventrouter.podSecurityContext.sysctls }}
          - name: podSecurityContext.sysctls[{{ $index }}].{{ $sysctl.name }}
            value: {{ $sysctl.value | quote }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: podSecurityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext "hostProcess") (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext.windowsOptions "hostProcess") }}
          - name: podSecurityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext "windowsOptions") (hasKey .Values.krateoplatformops.eventrouter.podSecurityContext.windowsOptions "runAsUserName") }}
          - name: podSecurityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.eventrouter.podSecurityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.securityContext.allowPrivilegeEscalation }}
          - name: securityContext.allowPrivilegeEscalation
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.allowPrivilegeEscalation | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.eventrouter.securityContext.appArmorProfile "localhostProfile") }}
          - name: securityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.eventrouter.securityContext.appArmorProfile "type") }}
          - name: securityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.appArmorProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "capabilities") (hasKey .Values.krateoplatformops.eventrouter.securityContext.capabilities "add") }}
          {{- range $index, $value := .Values.krateoplatformops.eventrouter.securityContext.capabilities.add }}
          - name: securityContext.capabilities.add[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "capabilities") (hasKey .Values.krateoplatformops.eventrouter.securityContext.capabilities "drop") }}
          {{- range $index, $value := .Values.krateoplatformops.eventrouter.securityContext.capabilities.drop }}
          - name: securityContext.capabilities.drop[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.securityContext.privileged }}
          - name: securityContext.privileged
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.privileged }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.securityContext.procMount }}
          - name: securityContext.procMount
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.procMount }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.securityContext.readOnlyRootFilesystem }}
          - name: securityContext.readOnlyRootFilesystem
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.readOnlyRootFilesystem | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.securityContext.runAsGroup }}
          - name: securityContext.runAsGroup
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.securityContext.runAsNonRoot }}
          - name: securityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.securityContext.runAsUser }}
          - name: securityContext.runAsUser
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventrouter.securityContext.seLinuxOptions "level") }}
          - name: securityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.seLinuxOptions.level | replace "," "\\," }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventrouter.securityContext.seLinuxOptions "role") }}
          - name: securityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventrouter.securityContext.seLinuxOptions "type") }}
          - name: securityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventrouter.securityContext.seLinuxOptions "user") }}
          - name: securityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.eventrouter.securityContext.seccompProfile "localhostProfile") }}
          - name: securityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.eventrouter.securityContext.seccompProfile "type") }}
          - name: securityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.seccompProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.eventrouter.securityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: securityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "hostProcess") (hasKey .Values.krateoplatformops.eventrouter.securityContext.windowsOptions "hostProcess") }}
          - name: securityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventrouter.securityContext "windowsOptions") (hasKey .Values.krateoplatformops.eventrouter.securityContext.windowsOptions "runAsUserName") }}
          - name: securityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.eventrouter.securityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.eventrouter.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.eventrouter.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.eventrouter.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.eventrouter.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventrouter.env }}
          {{- range $key, $value := .Values.krateoplatformops.eventrouter.env }}
          - name: env.{{ $key }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- end }}

    - id: install-eventsse
      type: chart
      with:
        name: {{ .Values.krateoplatformops.eventsse.chart.name }}
        version: {{ .Values.krateoplatformops.eventsse.chart.version }}
        repository: {{ .Values.krateoplatformops.eventsse.chart.repository }}
        wait: {{ .Values.krateoplatformops.eventsse.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.eventsse.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.eventsse.chart.credentials (gt (len .Values.krateoplatformops.eventsse.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.eventsse.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.eventsse.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.eventsse.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.eventsse.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}
          {{- end }}
          {{- if .Values.krateoplatformops.backend.etcd.fullnameOverride }}
          - name: etcd.service.name
            value: {{ .Values.krateoplatformops.backend.etcd.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventsse.resources.requests .Values.krateoplatformops.eventsse.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.eventsse.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventsse.resources.requests .Values.krateoplatformops.eventsse.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.eventsse.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventsse.resources.limits .Values.krateoplatformops.eventsse.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.eventsse.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.eventsse.resources.limits .Values.krateoplatformops.eventsse.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.eventsse.resources.limits.memory }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.eventsse.podSecurityContext.appArmorProfile "localhostProfile") }}
          - name: podSecurityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.eventsse.podSecurityContext.appArmorProfile "type") }}
          - name: podSecurityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.appArmorProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.podSecurityContext.fsGroup }}
          - name: podSecurityContext.fsGroup
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.fsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.podSecurityContext.fsGroupChangePolicy }}
          - name: podSecurityContext.fsGroupChangePolicy
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.fsGroupChangePolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.podSecurityContext.runAsGroup }}
          - name: podSecurityContext.runAsGroup
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.podSecurityContext.runAsNonRoot }}
          - name: podSecurityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.podSecurityContext.runAsUser }}
          - name: podSecurityContext.runAsUser
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventsse.podSecurityContext.seLinuxOptions "level") }}
          - name: podSecurityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.seLinuxOptions.level | replace "," "\\,"  }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventsse.podSecurityContext.seLinuxOptions "role") }}
          - name: podSecurityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventsse.podSecurityContext.seLinuxOptions "type") }}
          - name: podSecurityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventsse.podSecurityContext.seLinuxOptions "user") }}
          - name: podSecurityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.eventsse.podSecurityContext.seccompProfile "localhostProfile") }}
          - name: podSecurityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.eventsse.podSecurityContext.seccompProfile "type") }}
          - name: podSecurityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.seccompProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.podSecurityContext.supplementalGroups }}
          {{- range $index, $value := .Values.krateoplatformops.eventsse.podSecurityContext.supplementalGroups }}
          - name: podSecurityContext.supplementalGroups[{{ $index }}]
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.podSecurityContext.supplementalGroupsPolicy }}
          - name: podSecurityContext.supplementalGroupsPolicy
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.supplementalGroupsPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.podSecurityContext.sysctls }}
          {{- range $index, $sysctl := .Values.krateoplatformops.eventsse.podSecurityContext.sysctls }}
          - name: podSecurityContext.sysctls[{{ $index }}].{{ $sysctl.name }}
            value: {{ $sysctl.value | quote }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.podSecurityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.eventsse.podSecurityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: podSecurityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.podSecurityContext "hostProcess") (hasKey .Values.krateoplatformops.eventsse.podSecurityContext.windowsOptions "hostProcess") }}
          - name: podSecurityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.podSecurityContext "windowsOptions") (hasKey .Values.krateoplatformops.eventsse.podSecurityContext.windowsOptions "runAsUserName") }}
          - name: podSecurityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.eventsse.podSecurityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.securityContext.allowPrivilegeEscalation }}
          - name: securityContext.allowPrivilegeEscalation
            value: {{ .Values.krateoplatformops.eventsse.securityContext.allowPrivilegeEscalation | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.eventsse.securityContext.appArmorProfile "localhostProfile") }}
          - name: securityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.eventsse.securityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.eventsse.securityContext.appArmorProfile "type") }}
          - name: securityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.eventsse.securityContext.appArmorProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "capabilities") (hasKey .Values.krateoplatformops.eventsse.securityContext.capabilities "add") }}
          {{- range $index, $value := .Values.krateoplatformops.eventsse.securityContext.capabilities.add }}
          - name: securityContext.capabilities.add[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "capabilities") (hasKey .Values.krateoplatformops.eventsse.securityContext.capabilities "drop") }}
          {{- range $index, $value := .Values.krateoplatformops.eventsse.securityContext.capabilities.drop }}
          - name: securityContext.capabilities.drop[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.securityContext.privileged }}
          - name: securityContext.privileged
            value: {{ .Values.krateoplatformops.eventsse.securityContext.privileged }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.securityContext.procMount }}
          - name: securityContext.procMount
            value: {{ .Values.krateoplatformops.eventsse.securityContext.procMount }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.securityContext.readOnlyRootFilesystem }}
          - name: securityContext.readOnlyRootFilesystem
            value: {{ .Values.krateoplatformops.eventsse.securityContext.readOnlyRootFilesystem | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.securityContext.runAsGroup }}
          - name: securityContext.runAsGroup
            value: {{ .Values.krateoplatformops.eventsse.securityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.securityContext.runAsNonRoot }}
          - name: securityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.eventsse.securityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.securityContext.runAsUser }}
          - name: securityContext.runAsUser
            value: {{ .Values.krateoplatformops.eventsse.securityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventsse.securityContext.seLinuxOptions "level") }}
          - name: securityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.eventsse.securityContext.seLinuxOptions.level | replace "," "\\," }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventsse.securityContext.seLinuxOptions "role") }}
          - name: securityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.eventsse.securityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventsse.securityContext.seLinuxOptions "type") }}
          - name: securityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.eventsse.securityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.eventsse.securityContext.seLinuxOptions "user") }}
          - name: securityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.eventsse.securityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.eventsse.securityContext.seccompProfile "localhostProfile") }}
          - name: securityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.eventsse.securityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.eventsse.securityContext.seccompProfile "type") }}
          - name: securityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.eventsse.securityContext.seccompProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.eventsse.securityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: securityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.eventsse.securityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "hostProcess") (hasKey .Values.krateoplatformops.eventsse.securityContext.windowsOptions "hostProcess") }}
          - name: securityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.eventsse.securityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.eventsse.securityContext "windowsOptions") (hasKey .Values.krateoplatformops.eventsse.securityContext.windowsOptions "runAsUserName") }}
          - name: securityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.eventsse.securityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.eventsse.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.eventsse.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.eventsse.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.eventsse.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.service.type "NodePort" }}
          - name: service.type
            value: NodePort
          - name: service.nodePort
            value: "30083"
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: service.type
            value: LoadBalancer
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.eventsse.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- if eq .Values.krateoplatformops.ingress.enabled true }}
          - name: ingress.enabled
            value: "true"
          - name: ingress.className
            value: {{ .Values.krateoplatformops.ingress.eventsse.className }}
          {{- range $key, $value := .Values.krateoplatformops.ingress.eventsse.annotations }}
          - name: ingress.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          - name: ingress.hosts[0].host
            value: {{ index .Values.krateoplatformops.ingress.eventsse.hosts 0 "host" }}
          - name: ingress.hosts[0].paths[0].path
            value: {{ index .Values.krateoplatformops.ingress.eventsse.hosts 0 "paths" 0 "path" }}
          - name: ingress.hosts[0].paths[0].pathType
            value: {{ index .Values.krateoplatformops.ingress.eventsse.hosts 0 "paths" 0 "pathType" }}
          {{- if and .Values.krateoplatformops.ingress.eventsse.tls (gt (len .Values.krateoplatformops.ingress.eventsse.tls) 0) }}
          - name: ingress.tls[0].secretName
            value: {{ index .Values.krateoplatformops.ingress.eventsse.tls 0 "secretName" }}
          - name: ingress.tls[0].hosts[0]
            value: {{ index .Values.krateoplatformops.ingress.eventsse.tls 0 "hosts" 0 }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.env }}
          {{- range $key, $value := .Values.krateoplatformops.eventsse.env }}
          - name: env.{{ $key }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- end }}

    {{- if and (eq .Values.krateoplatformops.service.type "NodePort") .Values.krateoplatformops.service.externalIpAvailable }}
    # to implement: $(kubectl get nodes --namespace krateo-system -o jsonpath="{.items[0].status.addresses[0].address}")
    - id: extract-eventsse-nodeport-ip
      type: var
      with:
        name: EVENTSSE_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-external
            {{- else }}
            name: eventsse-external
            {{- end }}
          selector: .spec.ports[0].nodePort

    - id: extract-eventsse-nodeport-port
      type: var
      with:
        name: EVENTSSE_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-external
            {{- else }}
            name: eventsse-external
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if and (eq .Values.krateoplatformops.service.type "NodePort") (not .Values.krateoplatformops.service.externalIpAvailable) }}
    - id: extract-eventsse-nodeport-port
      type: var
      with:
        name: EVENTSSE_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-external
            {{- else }}
            name: eventsse-external
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}

    {{- if .Values.krateoplatformops.service.externalIpAvailable }}
    - id: extract-eventsse-lb-ip
      type: var
      with:
        name: EVENTSSE_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-external
            {{- else }}
            name: eventsse-external
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip
    {{- else }}
    - id: extract-eventsse-lb-ip
      type: var
      with:
        name: EVENTSSE_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-external
            {{- else }}
            name: eventsse-external
            {{- end }}
          selector: .status.loadBalancer.ingress[0].hostname
    {{- end }}

    - id: extract-eventsse-lb-port
      type: var
      with:
        name: EVENTSSE_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-external
            {{- else }}
            name: eventsse-external
            {{- end }}
          selector: .spec.ports[0].port
    {{- else if .Values.krateoplatformops.ingress.enabled }}
    - id: extract-eventsse-ingress-ip
      type: var
      with:
        name: EVENTSSE_IP
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}
            {{- else }}
            name: eventsse
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip

    - id: extract-eventsse-ingress-host
      type: var
      with:
        name: EVENTSSE_INGRESS_HOST
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}
            {{- else }}
            name: eventsse
            {{- end }}
          selector: .spec.rules[0].host
    {{- end }}

    {{- if .Values.krateoplatformops.terminal.enabled }}
    - id: install-terminal-server
      type: chart
      with:
        name: {{ .Values.krateoplatformops.terminal.chart.name }}
        version: {{ .Values.krateoplatformops.terminal.chart.version }}
        repository: {{ .Values.krateoplatformops.terminal.chart.repository }}
        wait: {{ .Values.krateoplatformops.terminal.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.terminal.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.terminal.chart.credentials (gt (len .Values.krateoplatformops.terminal.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.terminal.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.terminal.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.terminal.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.terminal.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.terminal.resources.requests .Values.krateoplatformops.terminal.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.terminal.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.terminal.resources.requests .Values.krateoplatformops.terminal.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.terminal.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.terminal.resources.limits .Values.krateoplatformops.terminal.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.terminal.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.terminal.resources.limits .Values.krateoplatformops.terminal.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.terminal.resources.limits.memory }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.terminal.podSecurityContext.appArmorProfile "localhostProfile") }}
          - name: podSecurityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.terminal.podSecurityContext.appArmorProfile "type") }}
          - name: podSecurityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.appArmorProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.podSecurityContext.fsGroup }}
          - name: podSecurityContext.fsGroup
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.fsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.podSecurityContext.fsGroupChangePolicy }}
          - name: podSecurityContext.fsGroupChangePolicy
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.fsGroupChangePolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.podSecurityContext.runAsGroup }}
          - name: podSecurityContext.runAsGroup
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.podSecurityContext.runAsNonRoot }}
          - name: podSecurityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.podSecurityContext.runAsUser }}
          - name: podSecurityContext.runAsUser
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.terminal.podSecurityContext.seLinuxOptions "level") }}
          - name: podSecurityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.seLinuxOptions.level | replace "," "\\,"  }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.terminal.podSecurityContext.seLinuxOptions "role") }}
          - name: podSecurityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.terminal.podSecurityContext.seLinuxOptions "type") }}
          - name: podSecurityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.terminal.podSecurityContext.seLinuxOptions "user") }}
          - name: podSecurityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.terminal.podSecurityContext.seccompProfile "localhostProfile") }}
          - name: podSecurityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.terminal.podSecurityContext.seccompProfile "type") }}
          - name: podSecurityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.seccompProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.podSecurityContext.supplementalGroups }}
          {{- range $index, $value := .Values.krateoplatformops.terminal.podSecurityContext.supplementalGroups }}
          - name: podSecurityContext.supplementalGroups[{{ $index }}]
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.podSecurityContext.supplementalGroupsPolicy }}
          - name: podSecurityContext.supplementalGroupsPolicy
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.supplementalGroupsPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.podSecurityContext.sysctls }}
          {{- range $index, $sysctl := .Values.krateoplatformops.terminal.podSecurityContext.sysctls }}
          - name: podSecurityContext.sysctls[{{ $index }}].{{ $sysctl.name }}
            value: {{ $sysctl.value | quote }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.podSecurityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.terminal.podSecurityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: podSecurityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.podSecurityContext "hostProcess") (hasKey .Values.krateoplatformops.terminal.podSecurityContext.windowsOptions "hostProcess") }}
          - name: podSecurityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.podSecurityContext "windowsOptions") (hasKey .Values.krateoplatformops.terminal.podSecurityContext.windowsOptions "runAsUserName") }}
          - name: podSecurityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.terminal.podSecurityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.securityContext.allowPrivilegeEscalation }}
          - name: securityContext.allowPrivilegeEscalation
            value: {{ .Values.krateoplatformops.terminal.securityContext.allowPrivilegeEscalation | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.terminal.securityContext.appArmorProfile "localhostProfile") }}
          - name: securityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.terminal.securityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.terminal.securityContext.appArmorProfile "type") }}
          - name: securityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.terminal.securityContext.appArmorProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "capabilities") (hasKey .Values.krateoplatformops.terminal.securityContext.capabilities "add") }}
          {{- range $index, $value := .Values.krateoplatformops.terminal.securityContext.capabilities.add }}
          - name: securityContext.capabilities.add[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "capabilities") (hasKey .Values.krateoplatformops.terminal.securityContext.capabilities "drop") }}
          {{- range $index, $value := .Values.krateoplatformops.terminal.securityContext.capabilities.drop }}
          - name: securityContext.capabilities.drop[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.securityContext.privileged }}
          - name: securityContext.privileged
            value: {{ .Values.krateoplatformops.terminal.securityContext.privileged }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.securityContext.procMount }}
          - name: securityContext.procMount
            value: {{ .Values.krateoplatformops.terminal.securityContext.procMount }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.securityContext.readOnlyRootFilesystem }}
          - name: securityContext.readOnlyRootFilesystem
            value: {{ .Values.krateoplatformops.terminal.securityContext.readOnlyRootFilesystem | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.securityContext.runAsGroup }}
          - name: securityContext.runAsGroup
            value: {{ .Values.krateoplatformops.terminal.securityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.securityContext.runAsNonRoot }}
          - name: securityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.terminal.securityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.securityContext.runAsUser }}
          - name: securityContext.runAsUser
            value: {{ .Values.krateoplatformops.terminal.securityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.terminal.securityContext.seLinuxOptions "level") }}
          - name: securityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.terminal.securityContext.seLinuxOptions.level | replace "," "\\," }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.terminal.securityContext.seLinuxOptions "role") }}
          - name: securityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.terminal.securityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.terminal.securityContext.seLinuxOptions "type") }}
          - name: securityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.terminal.securityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.terminal.securityContext.seLinuxOptions "user") }}
          - name: securityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.terminal.securityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.terminal.securityContext.seccompProfile "localhostProfile") }}
          - name: securityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.terminal.securityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.terminal.securityContext.seccompProfile "type") }}
          - name: securityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.terminal.securityContext.seccompProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.terminal.securityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: securityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.terminal.securityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "hostProcess") (hasKey .Values.krateoplatformops.terminal.securityContext.windowsOptions "hostProcess") }}
          - name: securityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.terminal.securityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.terminal.securityContext "windowsOptions") (hasKey .Values.krateoplatformops.terminal.securityContext.windowsOptions "runAsUserName") }}
          - name: securityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.terminal.securityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.terminal.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.terminal.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.terminal.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.terminal.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.service.type "NodePort" }}
          - name: service.type
            value: NodePort
          - name: service.nodePort
            value: "30084"
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: service.type
            value: LoadBalancer
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.terminal.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- if eq .Values.krateoplatformops.ingress.enabled true }}
          - name: ingress.enabled
            value: "true"
          - name: ingress.className
            value: {{ .Values.krateoplatformops.ingress.terminal.className }}
          {{- range $key, $value := .Values.krateoplatformops.ingress.terminal.annotations }}
          - name: ingress.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          - name: ingress.hosts[0].host
            value: {{ index .Values.krateoplatformops.ingress.terminal.hosts 0 "host" }}
          - name: ingress.hosts[0].paths[0].path
            value: {{ index .Values.krateoplatformops.ingress.terminal.hosts 0 "paths" 0 "path" }}
          - name: ingress.hosts[0].paths[0].pathType
            value: {{ index .Values.krateoplatformops.ingress.terminal.hosts 0 "paths" 0 "pathType" }}
          {{- if and .Values.krateoplatformops.ingress.terminal.tls (gt (len .Values.krateoplatformops.ingress.terminal.tls) 0) }}
          - name: ingress.tls[0].secretName
            value: {{ index .Values.krateoplatformops.ingress.terminal.tls 0 "secretName" }}
          - name: ingress.tls[0].hosts[0]
            value: {{ index .Values.krateoplatformops.ingress.terminal.tls 0 "hosts" 0 }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.terminal.env }}
          {{- range $key, $value := .Values.krateoplatformops.terminal.env }}
          - name: env.{{ $key }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- end }}

    {{- if and (eq .Values.krateoplatformops.service.type "NodePort") .Values.krateoplatformops.service.externalIpAvailable }}
    # to implement: $(kubectl get nodes --namespace krateo-system -o jsonpath="{.items[0].status.addresses[0].address}")
    - id: extract-terminal-nodeport-ip
      type: var
      with:
        name: TERMINAL_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .spec.ports[0].nodePort

    - id: extract-terminal-nodeport-port
      type: var
      with:
        name: TERMINAL_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if and (eq .Values.krateoplatformops.service.type "NodePort") (not .Values.krateoplatformops.service.externalIpAvailable) }}
    - id: extract-terminal-nodeport-port
      type: var
      with:
        name: TERMINAL_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .spec.ports[0].nodePort

    {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}

    {{- if .Values.krateoplatformops.service.externalIpAvailable }}
    - id: extract-terminal-lb-ip
      type: var
      with:
        name: TERMINAL_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip
    {{- else }}
    - id: extract-terminal-lb-ip
      type: var
      with:
        name: EVENTSSE_IP
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .status.loadBalancer.ingress[0].hostname
    {{- end }}

    - id: extract-terminal-lb-port
      type: var
      with:
        name: TERMINAL_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .spec.ports[0].port
    {{- else if .Values.krateoplatformops.ingress.enabled }}
    - id: extract-terminal-ingress-ip
      type: var
      with:
        name: TERMINAL_IP
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .status.loadBalancer.ingress[0].ip

    - id: extract-terminal-ingress-host
      type: var
      with:
        name: TERMINAL_INGRESS_HOST
        valueFrom:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            {{- if .Values.krateoplatformops.terminal.fullnameOverride }}
            name: {{ .Values.krateoplatformops.terminal.fullnameOverride }}
            {{- else }}
            name: terminal-server
            {{- end }}
          selector: .spec.rules[0].host
    {{- end }}

    {{- end }}

    - id: install-frontend
      type: chart
      with:
        name: {{ .Values.krateoplatformops.frontend.chart.name }}
        version: {{ .Values.krateoplatformops.frontend.chart.version }}
        repository: {{ .Values.krateoplatformops.frontend.chart.repository }}
        wait: {{ .Values.krateoplatformops.frontend.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.frontend.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.frontend.chart.credentials (gt (len .Values.krateoplatformops.frontend.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.frontend.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.frontend.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.frontend.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.frontend.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.frontend.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.frontend.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.frontend.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.frontend.resources.requests .Values.krateoplatformops.frontend.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.frontend.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.frontend.resources.requests .Values.krateoplatformops.frontend.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.frontend.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.frontend.resources.limits .Values.krateoplatformops.frontend.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.frontend.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.frontend.resources.limits .Values.krateoplatformops.frontend.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.frontend.resources.limits.memory }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.frontend.podSecurityContext.appArmorProfile "localhostProfile") }}
          - name: podSecurityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.frontend.podSecurityContext.appArmorProfile "type") }}
          - name: podSecurityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.appArmorProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.podSecurityContext.fsGroup }}
          - name: podSecurityContext.fsGroup
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.fsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.podSecurityContext.fsGroupChangePolicy }}
          - name: podSecurityContext.fsGroupChangePolicy
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.fsGroupChangePolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.podSecurityContext.runAsGroup }}
          - name: podSecurityContext.runAsGroup
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.podSecurityContext.runAsNonRoot }}
          - name: podSecurityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.podSecurityContext.runAsUser }}
          - name: podSecurityContext.runAsUser
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.frontend.podSecurityContext.seLinuxOptions "level") }}
          - name: podSecurityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.seLinuxOptions.level | replace "," "\\,"  }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.frontend.podSecurityContext.seLinuxOptions "role") }}
          - name: podSecurityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.frontend.podSecurityContext.seLinuxOptions "type") }}
          - name: podSecurityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.frontend.podSecurityContext.seLinuxOptions "user") }}
          - name: podSecurityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.frontend.podSecurityContext.seccompProfile "localhostProfile") }}
          - name: podSecurityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.frontend.podSecurityContext.seccompProfile "type") }}
          - name: podSecurityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.seccompProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.podSecurityContext.supplementalGroups }}
          {{- range $index, $value := .Values.krateoplatformops.frontend.podSecurityContext.supplementalGroups }}
          - name: podSecurityContext.supplementalGroups[{{ $index }}]
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.podSecurityContext.supplementalGroupsPolicy }}
          - name: podSecurityContext.supplementalGroupsPolicy
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.supplementalGroupsPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.podSecurityContext.sysctls }}
          {{- range $index, $sysctl := .Values.krateoplatformops.frontend.podSecurityContext.sysctls }}
          - name: podSecurityContext.sysctls[{{ $index }}].{{ $sysctl.name }}
            value: {{ $sysctl.value | quote }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.podSecurityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.frontend.podSecurityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: podSecurityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.podSecurityContext "hostProcess") (hasKey .Values.krateoplatformops.frontend.podSecurityContext.windowsOptions "hostProcess") }}
          - name: podSecurityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.podSecurityContext "windowsOptions") (hasKey .Values.krateoplatformops.frontend.podSecurityContext.windowsOptions "runAsUserName") }}
          - name: podSecurityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.frontend.podSecurityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.securityContext.allowPrivilegeEscalation }}
          - name: securityContext.allowPrivilegeEscalation
            value: {{ .Values.krateoplatformops.frontend.securityContext.allowPrivilegeEscalation | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.frontend.securityContext.appArmorProfile "localhostProfile") }}
          - name: securityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.frontend.securityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.frontend.securityContext.appArmorProfile "type") }}
          - name: securityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.frontend.securityContext.appArmorProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "capabilities") (hasKey .Values.krateoplatformops.frontend.securityContext.capabilities "add") }}
          {{- range $index, $value := .Values.krateoplatformops.frontend.securityContext.capabilities.add }}
          - name: securityContext.capabilities.add[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "capabilities") (hasKey .Values.krateoplatformops.frontend.securityContext.capabilities "drop") }}
          {{- range $index, $value := .Values.krateoplatformops.frontend.securityContext.capabilities.drop }}
          - name: securityContext.capabilities.drop[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.securityContext.privileged }}
          - name: securityContext.privileged
            value: {{ .Values.krateoplatformops.frontend.securityContext.privileged }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.securityContext.procMount }}
          - name: securityContext.procMount
            value: {{ .Values.krateoplatformops.frontend.securityContext.procMount }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.securityContext.readOnlyRootFilesystem }}
          - name: securityContext.readOnlyRootFilesystem
            value: {{ .Values.krateoplatformops.frontend.securityContext.readOnlyRootFilesystem | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.securityContext.runAsGroup }}
          - name: securityContext.runAsGroup
            value: {{ .Values.krateoplatformops.frontend.securityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.securityContext.runAsNonRoot }}
          - name: securityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.frontend.securityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.securityContext.runAsUser }}
          - name: securityContext.runAsUser
            value: {{ .Values.krateoplatformops.frontend.securityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.frontend.securityContext.seLinuxOptions "level") }}
          - name: securityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.frontend.securityContext.seLinuxOptions.level | replace "," "\\," }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.frontend.securityContext.seLinuxOptions "role") }}
          - name: securityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.frontend.securityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.frontend.securityContext.seLinuxOptions "type") }}
          - name: securityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.frontend.securityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.frontend.securityContext.seLinuxOptions "user") }}
          - name: securityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.frontend.securityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.frontend.securityContext.seccompProfile "localhostProfile") }}
          - name: securityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.frontend.securityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.frontend.securityContext.seccompProfile "type") }}
          - name: securityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.frontend.securityContext.seccompProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.frontend.securityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: securityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.frontend.securityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "hostProcess") (hasKey .Values.krateoplatformops.frontend.securityContext.windowsOptions "hostProcess") }}
          - name: securityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.frontend.securityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.frontend.securityContext "windowsOptions") (hasKey .Values.krateoplatformops.frontend.securityContext.windowsOptions "runAsUserName") }}
          - name: securityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.frontend.securityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.frontend.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.frontend.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.frontend.image.tag }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.service.type "NodePort" }}
          - name: service.type
            value: NodePort
          - name: service.nodePort
            value: "30080"
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: service.type
            value: LoadBalancer
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.frontend.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- if eq .Values.krateoplatformops.ingress.enabled true }}
          - name: ingress.enabled
            value: "true"
          - name: ingress.className
            value: {{ .Values.krateoplatformops.ingress.frontend.className }}
          {{- range $key, $value := .Values.krateoplatformops.ingress.frontend.annotations }}
          - name: ingress.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          - name: ingress.hosts[0].host
            value: {{ index .Values.krateoplatformops.ingress.frontend.hosts 0 "host" }}
          - name: ingress.hosts[0].paths[0].path
            value: {{ index .Values.krateoplatformops.ingress.frontend.hosts 0 "paths" 0 "path" }}
          - name: ingress.hosts[0].paths[0].pathType
            value: {{ index .Values.krateoplatformops.ingress.frontend.hosts 0 "paths" 0 "pathType" }}
          {{- if and .Values.krateoplatformops.ingress.frontend.tls (gt (len .Values.krateoplatformops.ingress.frontend.tls) 0) }}
          - name: ingress.tls[0].secretName
            value: {{ index .Values.krateoplatformops.ingress.frontend.tls 0 "secretName" }}
          - name: ingress.tls[0].hosts[0]
            value: {{ index .Values.krateoplatformops.ingress.frontend.tls 0 "hosts" 0 }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.overrideconf }}
          - name: config.AUTHN_API_BASE_URL
            value: {{ .Values.krateoplatformops.frontend.config.AUTHN_API_BASE_URL }}
          - name: config.BFF_API_BASE_URL
            value: {{ .Values.krateoplatformops.frontend.config.BFF_API_BASE_URL }}
          - name: config.EVENTS_PUSH_API_BASE_URL
            value: {{ .Values.krateoplatformops.frontend.config.EVENTS_PUSH_API_BASE_URL }}
          - name: config.EVENTS_API_BASE_URL
            value: {{ .Values.krateoplatformops.frontend.config.EVENTS_API_BASE_URL }}
          {{- if .Values.krateoplatformops.terminal.enabled }}
          - name: config.TERMINAL_SOCKET_URL
            value: {{ .Values.krateoplatformops.frontend.config.TERMINAL_SOCKET_URL }}
          {{- end }}
          {{- else if and (eq .Values.krateoplatformops.service.type "NodePort") .Values.krateoplatformops.service.externalIpAvailable }}
          - name: config.AUTHN_API_BASE_URL
            value: http://$AUTHN_IP:$AUTHN_PORT
          - name: config.BFF_API_BASE_URL
            value: http://$BFF_IP:$BFF_PORT
          - name: config.EVENTS_PUSH_API_BASE_URL
            value: http://$EVENTSSE_IP:$EVENTSSE_PORT
          - name: config.EVENTS_API_BASE_URL
            value: http://$EVENTSSE_IP:$EVENTSSE_PORT
          {{- if .Values.krateoplatformops.terminal.enabled }}
          - name: config.TERMINAL_SOCKET_URL
            value: http://$TERMINAL_IP:$TERMINAL_PORT
          {{- end }}
          {{- else if and (eq .Values.krateoplatformops.service.type "NodePort") (not .Values.krateoplatformops.service.externalIpAvailable) }}
          - name: config.AUTHN_API_BASE_URL
            value: http://127.0.0.1:$AUTHN_PORT
          - name: config.BFF_API_BASE_URL
            value: http://127.0.0.1:$BFF_PORT
          - name: config.EVENTS_PUSH_API_BASE_URL
            value: http://127.0.0.1:$EVENTSSE_PORT
          - name: config.EVENTS_API_BASE_URL
            value: http://127.0.0.1:$EVENTSSE_PORT
          {{- if .Values.krateoplatformops.terminal.enabled }}
          - name: config.TERMINAL_SOCKET_URL
            value: http://127.0.0.1:$TERMINAL_PORT
          {{- end }}
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: config.AUTHN_API_BASE_URL
            value: http://$AUTHN_IP:$AUTHN_PORT
          - name: config.BFF_API_BASE_URL
            value: http://$BFF_IP:$BFF_PORT
          - name: config.EVENTS_PUSH_API_BASE_URL
            value: http://$EVENTSSE_IP:$EVENTSSE_PORT
          - name: config.EVENTS_API_BASE_URL
            value: http://$EVENTSSE_IP:$EVENTSSE_PORT
          {{- if .Values.krateoplatformops.terminal.enabled }}
          - name: config.TERMINAL_SOCKET_URL
            value: http://$TERMINAL_IP:$TERMINAL_PORT
          {{- end }}
          {{- else if .Values.krateoplatformops.ingress.enabled }}
          - name: config.AUTHN_API_BASE_URL
            value: https://$AUTHN_INGRESS_HOST
          - name: config.BFF_API_BASE_URL
            value: https://$BFF_INGRESS_HOST
          - name: config.EVENTS_PUSH_API_BASE_URL
            value: https://$EVENTSSE_INGRESS_HOST
          - name: config.EVENTS_API_BASE_URL
            value: https://$EVENTSSE_INGRESS_HOST
          {{- if .Values.krateoplatformops.terminal.enabled }}
          - name: config.TERMINAL_SOCKET_URL
            value: https://$TERMINAL_INGRESS_HOST
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.env }}
          {{- range $key, $value := .Values.krateoplatformops.frontend.env }}
          - name: env.{{ $key }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.frontend.config.INIT }}
          - name: config.INIT
            value: {{ .Values.krateoplatformops.frontend.config.INIT }}
          {{- end }}


    - id: extract-bff-internal-port
      type: var
      with:
        name: BFF_INTERNAL_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.bff.fullnameOverride }}
            name: {{ .Values.krateoplatformops.bff.fullnameOverride }}
            {{- else }}
            name: bff
            {{- end }}
          selector: .spec.ports[0].port

    - id: install-core-provider
      type: chart
      with:
        name: {{ .Values.krateoplatformops.coreprovider.chart.name }}
        version: {{ .Values.krateoplatformops.coreprovider.chart.version }}
        repository: {{ .Values.krateoplatformops.coreprovider.chart.repository }}
        wait: {{ .Values.krateoplatformops.coreprovider.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.coreprovider.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.coreprovider.chart.credentials (gt (len .Values.krateoplatformops.coreprovider.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.coreprovider.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.coreprovider.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.coreprovider.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.coreprovider.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.coreprovider.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.coreprovider.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.coreprovider.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.coreprovider.resources.requests .Values.krateoplatformops.coreprovider.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.coreprovider.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.coreprovider.resources.requests .Values.krateoplatformops.coreprovider.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.coreprovider.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.coreprovider.resources.limits .Values.krateoplatformops.coreprovider.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.coreprovider.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.coreprovider.resources.limits .Values.krateoplatformops.coreprovider.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.coreprovider.resources.limits.memory }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext.appArmorProfile "localhostProfile") }}
          - name: podSecurityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext.appArmorProfile "type") }}
          - name: podSecurityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.appArmorProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.podSecurityContext.fsGroup }}
          - name: podSecurityContext.fsGroup
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.fsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.podSecurityContext.fsGroupChangePolicy }}
          - name: podSecurityContext.fsGroupChangePolicy
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.fsGroupChangePolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.podSecurityContext.runAsGroup }}
          - name: podSecurityContext.runAsGroup
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.podSecurityContext.runAsNonRoot }}
          - name: podSecurityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.podSecurityContext.runAsUser }}
          - name: podSecurityContext.runAsUser
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext.seLinuxOptions "level") }}
          - name: podSecurityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.seLinuxOptions.level | replace "," "\\,"  }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext.seLinuxOptions "role") }}
          - name: podSecurityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext.seLinuxOptions "type") }}
          - name: podSecurityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext.seLinuxOptions "user") }}
          - name: podSecurityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext.seccompProfile "localhostProfile") }}
          - name: podSecurityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext.seccompProfile "type") }}
          - name: podSecurityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.seccompProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.podSecurityContext.supplementalGroups }}
          {{- range $index, $value := .Values.krateoplatformops.coreprovider.podSecurityContext.supplementalGroups }}
          - name: podSecurityContext.supplementalGroups[{{ $index }}]
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.podSecurityContext.supplementalGroupsPolicy }}
          - name: podSecurityContext.supplementalGroupsPolicy
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.supplementalGroupsPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.podSecurityContext.sysctls }}
          {{- range $index, $sysctl := .Values.krateoplatformops.coreprovider.podSecurityContext.sysctls }}
          - name: podSecurityContext.sysctls[{{ $index }}].{{ $sysctl.name }}
            value: {{ $sysctl.value | quote }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: podSecurityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext "hostProcess") (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext.windowsOptions "hostProcess") }}
          - name: podSecurityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext "windowsOptions") (hasKey .Values.krateoplatformops.coreprovider.podSecurityContext.windowsOptions "runAsUserName") }}
          - name: podSecurityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.coreprovider.podSecurityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.securityContext.allowPrivilegeEscalation }}
          - name: securityContext.allowPrivilegeEscalation
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.allowPrivilegeEscalation | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.coreprovider.securityContext.appArmorProfile "localhostProfile") }}
          - name: securityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.coreprovider.securityContext.appArmorProfile "type") }}
          - name: securityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.appArmorProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "capabilities") (hasKey .Values.krateoplatformops.coreprovider.securityContext.capabilities "add") }}
          {{- range $index, $value := .Values.krateoplatformops.coreprovider.securityContext.capabilities.add }}
          - name: securityContext.capabilities.add[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "capabilities") (hasKey .Values.krateoplatformops.coreprovider.securityContext.capabilities "drop") }}
          {{- range $index, $value := .Values.krateoplatformops.coreprovider.securityContext.capabilities.drop }}
          - name: securityContext.capabilities.drop[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.securityContext.privileged }}
          - name: securityContext.privileged
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.privileged }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.securityContext.procMount }}
          - name: securityContext.procMount
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.procMount }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.securityContext.readOnlyRootFilesystem }}
          - name: securityContext.readOnlyRootFilesystem
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.readOnlyRootFilesystem | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.securityContext.runAsGroup }}
          - name: securityContext.runAsGroup
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.securityContext.runAsNonRoot }}
          - name: securityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.securityContext.runAsUser }}
          - name: securityContext.runAsUser
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.coreprovider.securityContext.seLinuxOptions "level") }}
          - name: securityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.seLinuxOptions.level | replace "," "\\," }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.coreprovider.securityContext.seLinuxOptions "role") }}
          - name: securityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.coreprovider.securityContext.seLinuxOptions "type") }}
          - name: securityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.coreprovider.securityContext.seLinuxOptions "user") }}
          - name: securityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.coreprovider.securityContext.seccompProfile "localhostProfile") }}
          - name: securityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.coreprovider.securityContext.seccompProfile "type") }}
          - name: securityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.seccompProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.coreprovider.securityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: securityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "hostProcess") (hasKey .Values.krateoplatformops.coreprovider.securityContext.windowsOptions "hostProcess") }}
          - name: securityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.coreprovider.securityContext "windowsOptions") (hasKey .Values.krateoplatformops.coreprovider.securityContext.windowsOptions "runAsUserName") }}
          - name: securityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.coreprovider.securityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.coreprovider.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.coreprovider.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.coreprovider.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.bff.fullnameOverride }}
          - name: env.URL_PLURALS
            value: http://{{ .Values.krateoplatformops.bff.fullnameOverride }}.{{ .Release.Namespace }}.svc.cluster.local:$BFF_INTERNAL_PORT/api-info/names
          {{- else }}
          - name: env.URL_PLURALS
            value: http://bff.{{ .Release.Namespace }}.svc.cluster.local:$BFF_INTERNAL_PORT/api-info/names
          {{- end }}
          {{- if .Values.krateoplatformops.coreprovider.env }}
          {{- range $key, $value := .Values.krateoplatformops.coreprovider.env }}
          - name: env.{{ $key }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- end }}
          
    - id: install-patch-provider
      type: chart
      with:
        name: {{ .Values.krateoplatformops.patchprovider.chart.name }}
        version: {{ .Values.krateoplatformops.patchprovider.chart.version }}
        repository: {{ .Values.krateoplatformops.patchprovider.chart.repository }}
        wait: {{ .Values.krateoplatformops.patchprovider.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.patchprovider.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.patchprovider.chart.credentials (gt (len .Values.krateoplatformops.patchprovider.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.patchprovider.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.patchprovider.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.patchprovider.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.patchprovider.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.patchprovider.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.patchprovider.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.patchprovider.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.patchprovider.resources.requests .Values.krateoplatformops.patchprovider.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.patchprovider.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.patchprovider.resources.requests .Values.krateoplatformops.patchprovider.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.patchprovider.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.patchprovider.resources.limits .Values.krateoplatformops.patchprovider.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.patchprovider.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.patchprovider.resources.limits .Values.krateoplatformops.patchprovider.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.patchprovider.resources.limits.memory }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext.appArmorProfile "localhostProfile") }}
          - name: podSecurityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext.appArmorProfile "type") }}
          - name: podSecurityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.appArmorProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.podSecurityContext.fsGroup }}
          - name: podSecurityContext.fsGroup
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.fsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.podSecurityContext.fsGroupChangePolicy }}
          - name: podSecurityContext.fsGroupChangePolicy
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.fsGroupChangePolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.podSecurityContext.runAsGroup }}
          - name: podSecurityContext.runAsGroup
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.podSecurityContext.runAsNonRoot }}
          - name: podSecurityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.podSecurityContext.runAsUser }}
          - name: podSecurityContext.runAsUser
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext.seLinuxOptions "level") }}
          - name: podSecurityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.seLinuxOptions.level | replace "," "\\,"  }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext.seLinuxOptions "role") }}
          - name: podSecurityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext.seLinuxOptions "type") }}
          - name: podSecurityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext.seLinuxOptions "user") }}
          - name: podSecurityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext.seccompProfile "localhostProfile") }}
          - name: podSecurityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext.seccompProfile "type") }}
          - name: podSecurityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.seccompProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.podSecurityContext.supplementalGroups }}
          {{- range $index, $value := .Values.krateoplatformops.patchprovider.podSecurityContext.supplementalGroups }}
          - name: podSecurityContext.supplementalGroups[{{ $index }}]
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.podSecurityContext.supplementalGroupsPolicy }}
          - name: podSecurityContext.supplementalGroupsPolicy
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.supplementalGroupsPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.podSecurityContext.sysctls }}
          {{- range $index, $sysctl := .Values.krateoplatformops.patchprovider.podSecurityContext.sysctls }}
          - name: podSecurityContext.sysctls[{{ $index }}].{{ $sysctl.name }}
            value: {{ $sysctl.value | quote }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: podSecurityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext "hostProcess") (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext.windowsOptions "hostProcess") }}
          - name: podSecurityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext "windowsOptions") (hasKey .Values.krateoplatformops.patchprovider.podSecurityContext.windowsOptions "runAsUserName") }}
          - name: podSecurityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.patchprovider.podSecurityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.securityContext.allowPrivilegeEscalation }}
          - name: securityContext.allowPrivilegeEscalation
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.allowPrivilegeEscalation | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.patchprovider.securityContext.appArmorProfile "localhostProfile") }}
          - name: securityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.patchprovider.securityContext.appArmorProfile "type") }}
          - name: securityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.appArmorProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "capabilities") (hasKey .Values.krateoplatformops.patchprovider.securityContext.capabilities "add") }}
          {{- range $index, $value := .Values.krateoplatformops.patchprovider.securityContext.capabilities.add }}
          - name: securityContext.capabilities.add[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "capabilities") (hasKey .Values.krateoplatformops.patchprovider.securityContext.capabilities "drop") }}
          {{- range $index, $value := .Values.krateoplatformops.patchprovider.securityContext.capabilities.drop }}
          - name: securityContext.capabilities.drop[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.securityContext.privileged }}
          - name: securityContext.privileged
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.privileged }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.securityContext.procMount }}
          - name: securityContext.procMount
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.procMount }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.securityContext.readOnlyRootFilesystem }}
          - name: securityContext.readOnlyRootFilesystem
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.readOnlyRootFilesystem | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.securityContext.runAsGroup }}
          - name: securityContext.runAsGroup
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.securityContext.runAsNonRoot }}
          - name: securityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.securityContext.runAsUser }}
          - name: securityContext.runAsUser
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.patchprovider.securityContext.seLinuxOptions "level") }}
          - name: securityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.seLinuxOptions.level | replace "," "\\," }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.patchprovider.securityContext.seLinuxOptions "role") }}
          - name: securityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.patchprovider.securityContext.seLinuxOptions "type") }}
          - name: securityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.patchprovider.securityContext.seLinuxOptions "user") }}
          - name: securityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.patchprovider.securityContext.seccompProfile "localhostProfile") }}
          - name: securityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.patchprovider.securityContext.seccompProfile "type") }}
          - name: securityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.seccompProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.patchprovider.securityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: securityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "hostProcess") (hasKey .Values.krateoplatformops.patchprovider.securityContext.windowsOptions "hostProcess") }}
          - name: securityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.patchprovider.securityContext "windowsOptions") (hasKey .Values.krateoplatformops.patchprovider.securityContext.windowsOptions "runAsUserName") }}
          - name: securityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.patchprovider.securityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.patchprovider.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.patchprovider.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.patchprovider.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.patchprovider.env }}
          {{- range $key, $value := .Values.krateoplatformops.patchprovider.env }}
          - name: env.{{ $key }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- end }}

    {{- if .Values.krateoplatformops.composableportalbasic.enabled }}
    - id: install-composable-portal-basic
      type: chart
      with:
        name: {{ .Values.krateoplatformops.composableportalbasic.chart.name }}
        version: {{ .Values.krateoplatformops.composableportalbasic.chart.version }}
        repository: {{ .Values.krateoplatformops.composableportalbasic.chart.repository }}
        wait: {{ .Values.krateoplatformops.composableportalbasic.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.composableportalbasic.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.composableportalbasic.chart.credentials (gt (len .Values.krateoplatformops.composableportalbasic.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.composableportalbasic.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.composableportalbasic.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.composableportalbasic.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.composableportalbasic.chart.credentials.passwordRef.namespace }}
        {{- end }}
    {{- end }}

    - id: extract-eventsse-internal-port
      type: var
      with:
        name: EVENTSSE_INTERNAL_PORT
        valueFrom:
          apiVersion: v1
          kind: Service
          metadata:
            {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
            name: {{ .Values.krateoplatformops.eventsse.fullnameOverride }}-internal
            {{- else }}
            name: eventsse-internal
            {{- end }}
          selector: .spec.ports[0].port

    - id: install-resource-tree-handler
      type: chart
      with:
        name: {{ .Values.krateoplatformops.resourcetreehandler.chart.name }}
        version: {{ .Values.krateoplatformops.resourcetreehandler.chart.version }}
        repository: {{ .Values.krateoplatformops.resourcetreehandler.chart.repository }}
        wait: {{ .Values.krateoplatformops.resourcetreehandler.chart.wait }}
        waitTimeout: {{ .Values.krateoplatformops.resourcetreehandler.chart.waitTimeout }}
        {{- if and .Values.krateoplatformops.resourcetreehandler.chart.credentials (gt (len .Values.krateoplatformops.resourcetreehandler.chart.credentials) 0) }}
        credentials:
          username: {{ .Values.krateoplatformops.resourcetreehandler.chart.credentials.username }}
          passwordRef: # reference to a secret
            key: {{ .Values.krateoplatformops.resourcetreehandler.chart.credentials.passwordRef.key }}
            name: {{ .Values.krateoplatformops.resourcetreehandler.chart.credentials.passwordRef.name }}
            namespace: {{ .Values.krateoplatformops.resourcetreehandler.chart.credentials.passwordRef.namespace }}
        {{- end }}
        set:
          {{- if .Values.krateoplatformops.resourcetreehandler.fullnameOverride }}
          - name: fullnameOverride
            value: {{ .Values.krateoplatformops.resourcetreehandler.fullnameOverride }}
          {{- end }}
          {{- if and .Values.krateoplatformops.resourcetreehandler.resources.requests .Values.krateoplatformops.resourcetreehandler.resources.requests.cpu }}
          - name: resources.requests.cpu
            value: {{ .Values.krateoplatformops.resourcetreehandler.resources.requests.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.resourcetreehandler.resources.requests .Values.krateoplatformops.resourcetreehandler.resources.requests.memory }}
          - name: resources.requests.memory
            value: {{ .Values.krateoplatformops.resourcetreehandler.resources.requests.memory }}
          {{- end }}
          {{- if and .Values.krateoplatformops.resourcetreehandler.resources.limits .Values.krateoplatformops.resourcetreehandler.resources.limits.cpu }}
          - name: resources.limits.cpu
            value: {{ .Values.krateoplatformops.resourcetreehandler.resources.limits.cpu | quote }}
          {{- end }}
          {{- if and .Values.krateoplatformops.resourcetreehandler.resources.limits .Values.krateoplatformops.resourcetreehandler.resources.limits.memory }}
          - name: resources.limits.memory
            value: {{ .Values.krateoplatformops.resourcetreehandler.resources.limits.memory }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext.appArmorProfile "localhostProfile") }}
          - name: podSecurityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext "appArmorProfile") (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext.appArmorProfile "type") }}
          - name: podSecurityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.appArmorProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.podSecurityContext.fsGroup }}
          - name: podSecurityContext.fsGroup
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.fsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.podSecurityContext.fsGroupChangePolicy }}
          - name: podSecurityContext.fsGroupChangePolicy
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.fsGroupChangePolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.podSecurityContext.runAsGroup }}
          - name: podSecurityContext.runAsGroup
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.podSecurityContext.runAsNonRoot }}
          - name: podSecurityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.podSecurityContext.runAsUser }}
          - name: podSecurityContext.runAsUser
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext.seLinuxOptions "level") }}
          - name: podSecurityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.seLinuxOptions.level | replace "," "\\,"  }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext.seLinuxOptions "role") }}
          - name: podSecurityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext.seLinuxOptions "type") }}
          - name: podSecurityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext.seLinuxOptions "user") }}
          - name: podSecurityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext.seccompProfile "localhostProfile") }}
          - name: podSecurityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext "seccompProfile") (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext.seccompProfile "type") }}
          - name: podSecurityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.seccompProfile.type }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.podSecurityContext.supplementalGroups }}
          {{- range $index, $value := .Values.krateoplatformops.resourcetreehandler.podSecurityContext.supplementalGroups }}
          - name: podSecurityContext.supplementalGroups[{{ $index }}]
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.podSecurityContext.supplementalGroupsPolicy }}
          - name: podSecurityContext.supplementalGroupsPolicy
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.supplementalGroupsPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.podSecurityContext.sysctls }}
          {{- range $index, $sysctl := .Values.krateoplatformops.resourcetreehandler.podSecurityContext.sysctls }}
          - name: podSecurityContext.sysctls[{{ $index }}].{{ $sysctl.name }}
            value: {{ $sysctl.value | quote }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: podSecurityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext "hostProcess") (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext.windowsOptions "hostProcess") }}
          - name: podSecurityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext "windowsOptions") (hasKey .Values.krateoplatformops.resourcetreehandler.podSecurityContext.windowsOptions "runAsUserName") }}
          - name: podSecurityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.resourcetreehandler.podSecurityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.securityContext.allowPrivilegeEscalation }}
          - name: securityContext.allowPrivilegeEscalation
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.allowPrivilegeEscalation | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.appArmorProfile "localhostProfile") }}
          - name: securityContext.appArmorProfile.localhostProfile
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.appArmorProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "appArmorProfile") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.appArmorProfile "type") }}
          - name: securityContext.appArmorProfile.type
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.appArmorProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "capabilities") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.capabilities "add") }}
          {{- range $index, $value := .Values.krateoplatformops.resourcetreehandler.securityContext.capabilities.add }}
          - name: securityContext.capabilities.add[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "capabilities") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.capabilities "drop") }}
          {{- range $index, $value := .Values.krateoplatformops.resourcetreehandler.securityContext.capabilities.drop }}
          - name: securityContext.capabilities.drop[{{ $index }}]
            value: {{ $value }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.securityContext.privileged }}
          - name: securityContext.privileged
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.privileged }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.securityContext.procMount }}
          - name: securityContext.procMount
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.procMount }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.securityContext.readOnlyRootFilesystem }}
          - name: securityContext.readOnlyRootFilesystem
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.readOnlyRootFilesystem | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.securityContext.runAsGroup }}
          - name: securityContext.runAsGroup
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.runAsGroup | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.securityContext.runAsNonRoot }}
          - name: securityContext.runAsNonRoot
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.runAsNonRoot | quote }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.securityContext.runAsUser }}
          - name: securityContext.runAsUser
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.runAsUser | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.seLinuxOptions "level") }}
          - name: securityContext.seLinuxOptions.level
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.seLinuxOptions.level | replace "," "\\," }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.seLinuxOptions "role") }}
          - name: securityContext.seLinuxOptions.role
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.seLinuxOptions.role }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.seLinuxOptions "type") }}
          - name: securityContext.seLinuxOptions.type
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.seLinuxOptions.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "seLinuxOptions") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.seLinuxOptions "user") }}
          - name: securityContext.seLinuxOptions.user
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.seLinuxOptions.user }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.seccompProfile "localhostProfile") }}
          - name: securityContext.seccompProfile.localhostProfile
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.seccompProfile.localhostProfile }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "seccompProfile") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.seccompProfile "type") }}
          - name: securityContext.seccompProfile.type
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.seccompProfile.type }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "gmsaCredentialSpecName") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.windowsOptions "gmsaCredentialSpecName") }}
          - name: securityContext.windowsOptions.gmsaCredentialSpecName
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.windowsOptions.gmsaCredentialSpecName }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "hostProcess") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.windowsOptions "hostProcess") }}
          - name: securityContext.windowsOptions.hostProcess
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.windowsOptions.hostProcess | quote }}
          {{- end }}
          {{- if and (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext "windowsOptions") (hasKey .Values.krateoplatformops.resourcetreehandler.securityContext.windowsOptions "runAsUserName") }}
          - name: securityContext.windowsOptions.runAsUserName
            value: {{ .Values.krateoplatformops.resourcetreehandler.securityContext.windowsOptions.runAsUserName }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.image.repository }}
          - name: image.repository
            value: {{ .Values.krateoplatformops.resourcetreehandler.image.repository }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.image.pullPolicy }}
          - name: image.pullPolicy
            value: {{ .Values.krateoplatformops.resourcetreehandler.image.pullPolicy }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.image.tag }}
          - name: image.tag
            value: {{ .Values.krateoplatformops.resourcetreehandler.image.tag }}
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.imagePullSecrets }}
          {{- range $index, $secret := .Values.krateoplatformops.resourcetreehandler.imagePullSecrets }}
          - name: imagePullSecrets.{{ $index }}.name
            value: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.service.type "NodePort" }}
          - name: service.type
            value: NodePort
          - name: service.nodePort
            value: "30085"
          {{- else if eq .Values.krateoplatformops.service.type "LoadBalancer" }}
          - name: service.type
            value: LoadBalancer
          {{- end }}
          {{- range $key, $value := .Values.krateoplatformops.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- with .Values.krateoplatformops.resourcetreehandler.service.annotations }}
          {{- range $key, $value := .Values.krateoplatformops.resourcetreehandler.service.annotations }}
          - name: service.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- end }}
          {{- if eq .Values.krateoplatformops.ingress.enabled true }}
          - name: ingress.enabled
            value: "true"
          - name: ingress.className
            value: {{ .Values.krateoplatformops.ingress.resourcetreehandler.className }}
          {{- range $key, $value := .Values.krateoplatformops.ingress.resourcetreehandler.annotations }}
          - name: ingress.annotations.{{ $key | replace "." "\\." }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          - name: ingress.hosts[0].host
            value: {{ index .Values.krateoplatformops.ingress.resourcetreehandler.hosts 0 "host" }}
          - name: ingress.hosts[0].paths[0].path
            value: {{ index .Values.krateoplatformops.ingress.resourcetreehandler.hosts 0 "paths" 0 "path" }}
          - name: ingress.hosts[0].paths[0].pathType
            value: {{ index .Values.krateoplatformops.ingress.resourcetreehandler.hosts 0 "paths" 0 "pathType" }}
          {{- if and .Values.krateoplatformops.ingress.resourcetreehandler.tls (gt (len .Values.krateoplatformops.ingress.resourcetreehandler.tls) 0) }}
          - name: ingress.tls[0].secretName
            value: {{ index .Values.krateoplatformops.ingress.resourcetreehandler.tls 0 "secretName" }}
          - name: ingress.tls[0].hosts[0]
            value: {{ index .Values.krateoplatformops.ingress.resourcetreehandler.tls 0 "hosts" 0 }}
          {{- end }}
          {{- end }}
          {{- if .Values.krateoplatformops.eventsse.fullnameOverride }}
          - name: env.URL_SSE
            value: http://{{ .Values.krateoplatformops.eventsse.fullnameOverride }}.{{ .Release.Namespace }}.svc.cluster.local:$EVENTSSE_INTERNAL_PORT/notifications
          {{- else }}
          - name: env.URL_SSE
            value: http://eventsse-internal.{{ .Release.Namespace }}.svc.cluster.local:$EVENTSSE_INTERNAL_PORT/notifications
          {{- end }}
          {{- if .Values.krateoplatformops.bff.fullnameOverride }}
          - name: env.URL_PLURALS
            value: http://{{ .Values.krateoplatformops.bff.fullnameOverride }}.{{ .Release.Namespace }}.svc.cluster.local:$BFF_INTERNAL_PORT/api-info/names
          {{- else }}
          - name: env.URL_PLURALS
            value: http://bff.{{ .Release.Namespace }}.svc.cluster.local:$BFF_INTERNAL_PORT/api-info/names
          {{- end }}
          {{- if .Values.krateoplatformops.resourcetreehandler.env }}
          {{- range $key, $value := .Values.krateoplatformops.resourcetreehandler.env }}
          - name: env.{{ $key }}
            value: {{ $value | quote }}
            asString: true
          {{- end }}
          {{- end }}

{{- end }}